'------------------------------------------------------------------------------
' <auto-generated>
'     O código foi gerado por uma ferramenta.
'     Versão de Tempo de Execução:4.0.30319.42000
'
'     As alterações ao arquivo poderão causar comportamento incorreto e serão perdidas se
'     o código for gerado novamente.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("autoescola_dbDataSet"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class autoescola_dbDataSet
    Inherits Global.System.Data.DataSet
    
    Private tabletb_agenda As tb_agendaDataTable
    
    Private tabletb_aluno As tb_alunoDataTable
    
    Private tabletb_aula_pratica As tb_aula_praticaDataTable
    
    Private tabletb_aula_teorica As tb_aula_teoricaDataTable
    
    Private tabletb_carro As tb_carroDataTable
    
    Private tabletb_instrutor As tb_instrutorDataTable
    
    Private tabletb_pagamento As tb_pagamentoDataTable
    
    Private relationtb_alunotb_agenda As Global.System.Data.DataRelation
    
    Private relationtb_carrotb_agenda As Global.System.Data.DataRelation
    
    Private relationtb_agendatb_instrutor As Global.System.Data.DataRelation
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("tb_agenda")) Is Nothing) Then
                MyBase.Tables.Add(New tb_agendaDataTable(ds.Tables("tb_agenda")))
            End If
            If (Not (ds.Tables("tb_aluno")) Is Nothing) Then
                MyBase.Tables.Add(New tb_alunoDataTable(ds.Tables("tb_aluno")))
            End If
            If (Not (ds.Tables("tb_aula_pratica")) Is Nothing) Then
                MyBase.Tables.Add(New tb_aula_praticaDataTable(ds.Tables("tb_aula_pratica")))
            End If
            If (Not (ds.Tables("tb_aula_teorica")) Is Nothing) Then
                MyBase.Tables.Add(New tb_aula_teoricaDataTable(ds.Tables("tb_aula_teorica")))
            End If
            If (Not (ds.Tables("tb_carro")) Is Nothing) Then
                MyBase.Tables.Add(New tb_carroDataTable(ds.Tables("tb_carro")))
            End If
            If (Not (ds.Tables("tb_instrutor")) Is Nothing) Then
                MyBase.Tables.Add(New tb_instrutorDataTable(ds.Tables("tb_instrutor")))
            End If
            If (Not (ds.Tables("tb_pagamento")) Is Nothing) Then
                MyBase.Tables.Add(New tb_pagamentoDataTable(ds.Tables("tb_pagamento")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property tb_agenda() As tb_agendaDataTable
        Get
            Return Me.tabletb_agenda
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property tb_aluno() As tb_alunoDataTable
        Get
            Return Me.tabletb_aluno
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property tb_aula_pratica() As tb_aula_praticaDataTable
        Get
            Return Me.tabletb_aula_pratica
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property tb_aula_teorica() As tb_aula_teoricaDataTable
        Get
            Return Me.tabletb_aula_teorica
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property tb_carro() As tb_carroDataTable
        Get
            Return Me.tabletb_carro
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property tb_instrutor() As tb_instrutorDataTable
        Get
            Return Me.tabletb_instrutor
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property tb_pagamento() As tb_pagamentoDataTable
        Get
            Return Me.tabletb_pagamento
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As autoescola_dbDataSet = CType(MyBase.Clone,autoescola_dbDataSet)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXml(reader)
            If (Not (ds.Tables("tb_agenda")) Is Nothing) Then
                MyBase.Tables.Add(New tb_agendaDataTable(ds.Tables("tb_agenda")))
            End If
            If (Not (ds.Tables("tb_aluno")) Is Nothing) Then
                MyBase.Tables.Add(New tb_alunoDataTable(ds.Tables("tb_aluno")))
            End If
            If (Not (ds.Tables("tb_aula_pratica")) Is Nothing) Then
                MyBase.Tables.Add(New tb_aula_praticaDataTable(ds.Tables("tb_aula_pratica")))
            End If
            If (Not (ds.Tables("tb_aula_teorica")) Is Nothing) Then
                MyBase.Tables.Add(New tb_aula_teoricaDataTable(ds.Tables("tb_aula_teorica")))
            End If
            If (Not (ds.Tables("tb_carro")) Is Nothing) Then
                MyBase.Tables.Add(New tb_carroDataTable(ds.Tables("tb_carro")))
            End If
            If (Not (ds.Tables("tb_instrutor")) Is Nothing) Then
                MyBase.Tables.Add(New tb_instrutorDataTable(ds.Tables("tb_instrutor")))
            End If
            If (Not (ds.Tables("tb_pagamento")) Is Nothing) Then
                MyBase.Tables.Add(New tb_pagamentoDataTable(ds.Tables("tb_pagamento")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tabletb_agenda = CType(MyBase.Tables("tb_agenda"),tb_agendaDataTable)
        If (initTable = true) Then
            If (Not (Me.tabletb_agenda) Is Nothing) Then
                Me.tabletb_agenda.InitVars
            End If
        End If
        Me.tabletb_aluno = CType(MyBase.Tables("tb_aluno"),tb_alunoDataTable)
        If (initTable = true) Then
            If (Not (Me.tabletb_aluno) Is Nothing) Then
                Me.tabletb_aluno.InitVars
            End If
        End If
        Me.tabletb_aula_pratica = CType(MyBase.Tables("tb_aula_pratica"),tb_aula_praticaDataTable)
        If (initTable = true) Then
            If (Not (Me.tabletb_aula_pratica) Is Nothing) Then
                Me.tabletb_aula_pratica.InitVars
            End If
        End If
        Me.tabletb_aula_teorica = CType(MyBase.Tables("tb_aula_teorica"),tb_aula_teoricaDataTable)
        If (initTable = true) Then
            If (Not (Me.tabletb_aula_teorica) Is Nothing) Then
                Me.tabletb_aula_teorica.InitVars
            End If
        End If
        Me.tabletb_carro = CType(MyBase.Tables("tb_carro"),tb_carroDataTable)
        If (initTable = true) Then
            If (Not (Me.tabletb_carro) Is Nothing) Then
                Me.tabletb_carro.InitVars
            End If
        End If
        Me.tabletb_instrutor = CType(MyBase.Tables("tb_instrutor"),tb_instrutorDataTable)
        If (initTable = true) Then
            If (Not (Me.tabletb_instrutor) Is Nothing) Then
                Me.tabletb_instrutor.InitVars
            End If
        End If
        Me.tabletb_pagamento = CType(MyBase.Tables("tb_pagamento"),tb_pagamentoDataTable)
        If (initTable = true) Then
            If (Not (Me.tabletb_pagamento) Is Nothing) Then
                Me.tabletb_pagamento.InitVars
            End If
        End If
        Me.relationtb_alunotb_agenda = Me.Relations("tb_alunotb_agenda")
        Me.relationtb_carrotb_agenda = Me.Relations("tb_carrotb_agenda")
        Me.relationtb_agendatb_instrutor = Me.Relations("tb_agendatb_instrutor")
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Private Sub InitClass()
        Me.DataSetName = "autoescola_dbDataSet"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/autoescola_dbDataSet.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tabletb_agenda = New tb_agendaDataTable()
        MyBase.Tables.Add(Me.tabletb_agenda)
        Me.tabletb_aluno = New tb_alunoDataTable()
        MyBase.Tables.Add(Me.tabletb_aluno)
        Me.tabletb_aula_pratica = New tb_aula_praticaDataTable()
        MyBase.Tables.Add(Me.tabletb_aula_pratica)
        Me.tabletb_aula_teorica = New tb_aula_teoricaDataTable()
        MyBase.Tables.Add(Me.tabletb_aula_teorica)
        Me.tabletb_carro = New tb_carroDataTable()
        MyBase.Tables.Add(Me.tabletb_carro)
        Me.tabletb_instrutor = New tb_instrutorDataTable()
        MyBase.Tables.Add(Me.tabletb_instrutor)
        Me.tabletb_pagamento = New tb_pagamentoDataTable()
        MyBase.Tables.Add(Me.tabletb_pagamento)
        Me.relationtb_alunotb_agenda = New Global.System.Data.DataRelation("tb_alunotb_agenda", New Global.System.Data.DataColumn() {Me.tabletb_aluno.cpf_alunoColumn}, New Global.System.Data.DataColumn() {Me.tabletb_agenda.alunoColumn}, false)
        Me.Relations.Add(Me.relationtb_alunotb_agenda)
        Me.relationtb_carrotb_agenda = New Global.System.Data.DataRelation("tb_carrotb_agenda", New Global.System.Data.DataColumn() {Me.tabletb_carro.placaColumn}, New Global.System.Data.DataColumn() {Me.tabletb_agenda.carroColumn}, false)
        Me.Relations.Add(Me.relationtb_carrotb_agenda)
        Me.relationtb_agendatb_instrutor = New Global.System.Data.DataRelation("tb_agendatb_instrutor", New Global.System.Data.DataColumn() {Me.tabletb_agenda.cod_instrutorColumn}, New Global.System.Data.DataColumn() {Me.tabletb_instrutor.cod_instrutorColumn}, false)
        Me.Relations.Add(Me.relationtb_agendatb_instrutor)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Private Function ShouldSerializetb_agenda() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Private Function ShouldSerializetb_aluno() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Private Function ShouldSerializetb_aula_pratica() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Private Function ShouldSerializetb_aula_teorica() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Private Function ShouldSerializetb_carro() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Private Function ShouldSerializetb_instrutor() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Private Function ShouldSerializetb_pagamento() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As autoescola_dbDataSet = New autoescola_dbDataSet()
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Delegate Sub tb_agendaRowChangeEventHandler(ByVal sender As Object, ByVal e As tb_agendaRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Delegate Sub tb_alunoRowChangeEventHandler(ByVal sender As Object, ByVal e As tb_alunoRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Delegate Sub tb_aula_praticaRowChangeEventHandler(ByVal sender As Object, ByVal e As tb_aula_praticaRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Delegate Sub tb_aula_teoricaRowChangeEventHandler(ByVal sender As Object, ByVal e As tb_aula_teoricaRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Delegate Sub tb_carroRowChangeEventHandler(ByVal sender As Object, ByVal e As tb_carroRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Delegate Sub tb_instrutorRowChangeEventHandler(ByVal sender As Object, ByVal e As tb_instrutorRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Delegate Sub tb_pagamentoRowChangeEventHandler(ByVal sender As Object, ByVal e As tb_pagamentoRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class tb_agendaDataTable
        Inherits Global.System.Data.TypedTableBase(Of tb_agendaRow)
        
        Private columncod_instrutor As Global.System.Data.DataColumn
        
        Private columncarro As Global.System.Data.DataColumn
        
        Private columnaluno As Global.System.Data.DataColumn
        
        Private columndata As Global.System.Data.DataColumn
        
        Private columnhorario_inicio As Global.System.Data.DataColumn
        
        Private columnhorario_fim As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "tb_agenda"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property cod_instrutorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncod_instrutor
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property carroColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncarro
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property alunoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnaluno
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property dataColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndata
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property horario_inicioColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnhorario_inicio
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property horario_fimColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnhorario_fim
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As tb_agendaRow
            Get
                Return CType(Me.Rows(index),tb_agendaRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event tb_agendaRowChanging As tb_agendaRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event tb_agendaRowChanged As tb_agendaRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event tb_agendaRowDeleting As tb_agendaRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event tb_agendaRowDeleted As tb_agendaRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Sub Addtb_agendaRow(ByVal row As tb_agendaRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Function Addtb_agendaRow(ByVal cod_instrutor As String, ByVal parenttb_carroRowBytb_carrotb_agenda As tb_carroRow, ByVal parenttb_alunoRowBytb_alunotb_agenda As tb_alunoRow, ByVal data As Date, ByVal horario_inicio As Date, ByVal horario_fim As Date) As tb_agendaRow
            Dim rowtb_agendaRow As tb_agendaRow = CType(Me.NewRow,tb_agendaRow)
            Dim columnValuesArray() As Object = New Object() {cod_instrutor, Nothing, Nothing, data, horario_inicio, horario_fim}
            If (Not (parenttb_carroRowBytb_carrotb_agenda) Is Nothing) Then
                columnValuesArray(1) = parenttb_carroRowBytb_carrotb_agenda(0)
            End If
            If (Not (parenttb_alunoRowBytb_alunotb_agenda) Is Nothing) Then
                columnValuesArray(2) = parenttb_alunoRowBytb_alunotb_agenda(0)
            End If
            rowtb_agendaRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowtb_agendaRow)
            Return rowtb_agendaRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function FindBycod_instrutor(ByVal cod_instrutor As String) As tb_agendaRow
            Return CType(Me.Rows.Find(New Object() {cod_instrutor}),tb_agendaRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As tb_agendaDataTable = CType(MyBase.Clone,tb_agendaDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New tb_agendaDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub InitVars()
            Me.columncod_instrutor = MyBase.Columns("cod_instrutor")
            Me.columncarro = MyBase.Columns("carro")
            Me.columnaluno = MyBase.Columns("aluno")
            Me.columndata = MyBase.Columns("data")
            Me.columnhorario_inicio = MyBase.Columns("horario_inicio")
            Me.columnhorario_fim = MyBase.Columns("horario_fim")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitClass()
            Me.columncod_instrutor = New Global.System.Data.DataColumn("cod_instrutor", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncod_instrutor)
            Me.columncarro = New Global.System.Data.DataColumn("carro", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncarro)
            Me.columnaluno = New Global.System.Data.DataColumn("aluno", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnaluno)
            Me.columndata = New Global.System.Data.DataColumn("data", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndata)
            Me.columnhorario_inicio = New Global.System.Data.DataColumn("horario_inicio", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnhorario_inicio)
            Me.columnhorario_fim = New Global.System.Data.DataColumn("horario_fim", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnhorario_fim)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columncod_instrutor}, true))
            Me.columncod_instrutor.AllowDBNull = false
            Me.columncod_instrutor.Unique = true
            Me.columncod_instrutor.MaxLength = 255
            Me.columncarro.MaxLength = 255
            Me.columnaluno.MaxLength = 255
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Newtb_agendaRow() As tb_agendaRow
            Return CType(Me.NewRow,tb_agendaRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New tb_agendaRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(tb_agendaRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.tb_agendaRowChangedEvent) Is Nothing) Then
                RaiseEvent tb_agendaRowChanged(Me, New tb_agendaRowChangeEvent(CType(e.Row,tb_agendaRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.tb_agendaRowChangingEvent) Is Nothing) Then
                RaiseEvent tb_agendaRowChanging(Me, New tb_agendaRowChangeEvent(CType(e.Row,tb_agendaRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.tb_agendaRowDeletedEvent) Is Nothing) Then
                RaiseEvent tb_agendaRowDeleted(Me, New tb_agendaRowChangeEvent(CType(e.Row,tb_agendaRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.tb_agendaRowDeletingEvent) Is Nothing) Then
                RaiseEvent tb_agendaRowDeleting(Me, New tb_agendaRowChangeEvent(CType(e.Row,tb_agendaRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Removetb_agendaRow(ByVal row As tb_agendaRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As autoescola_dbDataSet = New autoescola_dbDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "tb_agendaDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class tb_alunoDataTable
        Inherits Global.System.Data.TypedTableBase(Of tb_alunoRow)
        
        Private columncpf_aluno As Global.System.Data.DataColumn
        
        Private columnnome_aluno As Global.System.Data.DataColumn
        
        Private columndata_nasc_aluno As Global.System.Data.DataColumn
        
        Private columnrg_aluno As Global.System.Data.DataColumn
        
        Private columncep_aluno As Global.System.Data.DataColumn
        
        Private columnendereco_aluno As Global.System.Data.DataColumn
        
        Private columncomp_aluno As Global.System.Data.DataColumn
        
        Private columnbairro_aluno As Global.System.Data.DataColumn
        
        Private columncidade_aluno As Global.System.Data.DataColumn
        
        Private columnuf_aluno As Global.System.Data.DataColumn
        
        Private columnimg_aluno As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "tb_aluno"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property cpf_alunoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncpf_aluno
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property nome_alunoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnome_aluno
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property data_nasc_alunoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndata_nasc_aluno
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property rg_alunoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnrg_aluno
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property cep_alunoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncep_aluno
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property endereco_alunoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnendereco_aluno
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property comp_alunoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncomp_aluno
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property bairro_alunoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnbairro_aluno
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property cidade_alunoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncidade_aluno
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property uf_alunoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnuf_aluno
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property img_alunoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnimg_aluno
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As tb_alunoRow
            Get
                Return CType(Me.Rows(index),tb_alunoRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event tb_alunoRowChanging As tb_alunoRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event tb_alunoRowChanged As tb_alunoRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event tb_alunoRowDeleting As tb_alunoRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event tb_alunoRowDeleted As tb_alunoRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Sub Addtb_alunoRow(ByVal row As tb_alunoRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Function Addtb_alunoRow(ByVal cpf_aluno As String, ByVal nome_aluno As String, ByVal data_nasc_aluno As Date, ByVal rg_aluno As String, ByVal cep_aluno As String, ByVal endereco_aluno As String, ByVal comp_aluno As String, ByVal bairro_aluno As String, ByVal cidade_aluno As String, ByVal uf_aluno As String, ByVal img_aluno As String) As tb_alunoRow
            Dim rowtb_alunoRow As tb_alunoRow = CType(Me.NewRow,tb_alunoRow)
            Dim columnValuesArray() As Object = New Object() {cpf_aluno, nome_aluno, data_nasc_aluno, rg_aluno, cep_aluno, endereco_aluno, comp_aluno, bairro_aluno, cidade_aluno, uf_aluno, img_aluno}
            rowtb_alunoRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowtb_alunoRow)
            Return rowtb_alunoRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function FindBycpf_aluno(ByVal cpf_aluno As String) As tb_alunoRow
            Return CType(Me.Rows.Find(New Object() {cpf_aluno}),tb_alunoRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As tb_alunoDataTable = CType(MyBase.Clone,tb_alunoDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New tb_alunoDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub InitVars()
            Me.columncpf_aluno = MyBase.Columns("cpf_aluno")
            Me.columnnome_aluno = MyBase.Columns("nome_aluno")
            Me.columndata_nasc_aluno = MyBase.Columns("data_nasc_aluno")
            Me.columnrg_aluno = MyBase.Columns("rg_aluno")
            Me.columncep_aluno = MyBase.Columns("cep_aluno")
            Me.columnendereco_aluno = MyBase.Columns("endereco_aluno")
            Me.columncomp_aluno = MyBase.Columns("comp_aluno")
            Me.columnbairro_aluno = MyBase.Columns("bairro_aluno")
            Me.columncidade_aluno = MyBase.Columns("cidade_aluno")
            Me.columnuf_aluno = MyBase.Columns("uf_aluno")
            Me.columnimg_aluno = MyBase.Columns("img_aluno")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitClass()
            Me.columncpf_aluno = New Global.System.Data.DataColumn("cpf_aluno", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncpf_aluno)
            Me.columnnome_aluno = New Global.System.Data.DataColumn("nome_aluno", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnome_aluno)
            Me.columndata_nasc_aluno = New Global.System.Data.DataColumn("data_nasc_aluno", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndata_nasc_aluno)
            Me.columnrg_aluno = New Global.System.Data.DataColumn("rg_aluno", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnrg_aluno)
            Me.columncep_aluno = New Global.System.Data.DataColumn("cep_aluno", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncep_aluno)
            Me.columnendereco_aluno = New Global.System.Data.DataColumn("endereco_aluno", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnendereco_aluno)
            Me.columncomp_aluno = New Global.System.Data.DataColumn("comp_aluno", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncomp_aluno)
            Me.columnbairro_aluno = New Global.System.Data.DataColumn("bairro_aluno", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnbairro_aluno)
            Me.columncidade_aluno = New Global.System.Data.DataColumn("cidade_aluno", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncidade_aluno)
            Me.columnuf_aluno = New Global.System.Data.DataColumn("uf_aluno", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnuf_aluno)
            Me.columnimg_aluno = New Global.System.Data.DataColumn("img_aluno", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnimg_aluno)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columncpf_aluno}, true))
            Me.columncpf_aluno.AllowDBNull = false
            Me.columncpf_aluno.Unique = true
            Me.columncpf_aluno.MaxLength = 255
            Me.columnnome_aluno.MaxLength = 60
            Me.columnrg_aluno.MaxLength = 30
            Me.columncep_aluno.MaxLength = 20
            Me.columnendereco_aluno.MaxLength = 40
            Me.columncomp_aluno.MaxLength = 30
            Me.columnbairro_aluno.MaxLength = 40
            Me.columncidade_aluno.MaxLength = 40
            Me.columnuf_aluno.MaxLength = 2
            Me.columnimg_aluno.MaxLength = 536870910
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Newtb_alunoRow() As tb_alunoRow
            Return CType(Me.NewRow,tb_alunoRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New tb_alunoRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(tb_alunoRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.tb_alunoRowChangedEvent) Is Nothing) Then
                RaiseEvent tb_alunoRowChanged(Me, New tb_alunoRowChangeEvent(CType(e.Row,tb_alunoRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.tb_alunoRowChangingEvent) Is Nothing) Then
                RaiseEvent tb_alunoRowChanging(Me, New tb_alunoRowChangeEvent(CType(e.Row,tb_alunoRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.tb_alunoRowDeletedEvent) Is Nothing) Then
                RaiseEvent tb_alunoRowDeleted(Me, New tb_alunoRowChangeEvent(CType(e.Row,tb_alunoRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.tb_alunoRowDeletingEvent) Is Nothing) Then
                RaiseEvent tb_alunoRowDeleting(Me, New tb_alunoRowChangeEvent(CType(e.Row,tb_alunoRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Removetb_alunoRow(ByVal row As tb_alunoRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As autoescola_dbDataSet = New autoescola_dbDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "tb_alunoDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class tb_aula_praticaDataTable
        Inherits Global.System.Data.TypedTableBase(Of tb_aula_praticaRow)
        
        Private columncod_instrutor As Global.System.Data.DataColumn
        
        Private columnaluno As Global.System.Data.DataColumn
        
        Private columncarro As Global.System.Data.DataColumn
        
        Private columndata As Global.System.Data.DataColumn
        
        Private columnhorario_inicio As Global.System.Data.DataColumn
        
        Private columnhorario_fim As Global.System.Data.DataColumn
        
        Private columnpresenca As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "tb_aula_pratica"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property cod_instrutorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncod_instrutor
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property alunoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnaluno
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property carroColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncarro
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property dataColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndata
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property horario_inicioColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnhorario_inicio
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property horario_fimColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnhorario_fim
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property presencaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpresenca
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As tb_aula_praticaRow
            Get
                Return CType(Me.Rows(index),tb_aula_praticaRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event tb_aula_praticaRowChanging As tb_aula_praticaRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event tb_aula_praticaRowChanged As tb_aula_praticaRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event tb_aula_praticaRowDeleting As tb_aula_praticaRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event tb_aula_praticaRowDeleted As tb_aula_praticaRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Sub Addtb_aula_praticaRow(ByVal row As tb_aula_praticaRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Function Addtb_aula_praticaRow(ByVal cod_instrutor As Integer, ByVal aluno As String, ByVal carro As String, ByVal data As Date, ByVal horario_inicio As Date, ByVal horario_fim As Date, ByVal presenca As Boolean) As tb_aula_praticaRow
            Dim rowtb_aula_praticaRow As tb_aula_praticaRow = CType(Me.NewRow,tb_aula_praticaRow)
            Dim columnValuesArray() As Object = New Object() {cod_instrutor, aluno, carro, data, horario_inicio, horario_fim, presenca}
            rowtb_aula_praticaRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowtb_aula_praticaRow)
            Return rowtb_aula_praticaRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function FindBycod_instrutor(ByVal cod_instrutor As Integer) As tb_aula_praticaRow
            Return CType(Me.Rows.Find(New Object() {cod_instrutor}),tb_aula_praticaRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As tb_aula_praticaDataTable = CType(MyBase.Clone,tb_aula_praticaDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New tb_aula_praticaDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub InitVars()
            Me.columncod_instrutor = MyBase.Columns("cod_instrutor")
            Me.columnaluno = MyBase.Columns("aluno")
            Me.columncarro = MyBase.Columns("carro")
            Me.columndata = MyBase.Columns("data")
            Me.columnhorario_inicio = MyBase.Columns("horario_inicio")
            Me.columnhorario_fim = MyBase.Columns("horario_fim")
            Me.columnpresenca = MyBase.Columns("presenca")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitClass()
            Me.columncod_instrutor = New Global.System.Data.DataColumn("cod_instrutor", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncod_instrutor)
            Me.columnaluno = New Global.System.Data.DataColumn("aluno", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnaluno)
            Me.columncarro = New Global.System.Data.DataColumn("carro", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncarro)
            Me.columndata = New Global.System.Data.DataColumn("data", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndata)
            Me.columnhorario_inicio = New Global.System.Data.DataColumn("horario_inicio", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnhorario_inicio)
            Me.columnhorario_fim = New Global.System.Data.DataColumn("horario_fim", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnhorario_fim)
            Me.columnpresenca = New Global.System.Data.DataColumn("presenca", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpresenca)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columncod_instrutor}, true))
            Me.columncod_instrutor.AllowDBNull = false
            Me.columncod_instrutor.Unique = true
            Me.columnaluno.MaxLength = 255
            Me.columncarro.MaxLength = 255
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Newtb_aula_praticaRow() As tb_aula_praticaRow
            Return CType(Me.NewRow,tb_aula_praticaRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New tb_aula_praticaRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(tb_aula_praticaRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.tb_aula_praticaRowChangedEvent) Is Nothing) Then
                RaiseEvent tb_aula_praticaRowChanged(Me, New tb_aula_praticaRowChangeEvent(CType(e.Row,tb_aula_praticaRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.tb_aula_praticaRowChangingEvent) Is Nothing) Then
                RaiseEvent tb_aula_praticaRowChanging(Me, New tb_aula_praticaRowChangeEvent(CType(e.Row,tb_aula_praticaRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.tb_aula_praticaRowDeletedEvent) Is Nothing) Then
                RaiseEvent tb_aula_praticaRowDeleted(Me, New tb_aula_praticaRowChangeEvent(CType(e.Row,tb_aula_praticaRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.tb_aula_praticaRowDeletingEvent) Is Nothing) Then
                RaiseEvent tb_aula_praticaRowDeleting(Me, New tb_aula_praticaRowChangeEvent(CType(e.Row,tb_aula_praticaRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Removetb_aula_praticaRow(ByVal row As tb_aula_praticaRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As autoescola_dbDataSet = New autoescola_dbDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "tb_aula_praticaDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class tb_aula_teoricaDataTable
        Inherits Global.System.Data.TypedTableBase(Of tb_aula_teoricaRow)
        
        Private columncod_instrutor As Global.System.Data.DataColumn
        
        Private columnperiodo As Global.System.Data.DataColumn
        
        Private columndata_inicio As Global.System.Data.DataColumn
        
        Private columndata_fim As Global.System.Data.DataColumn
        
        Private columnhorario_inicio As Global.System.Data.DataColumn
        
        Private columnhorario_fim As Global.System.Data.DataColumn
        
        Private columnaluno As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "tb_aula_teorica"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property cod_instrutorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncod_instrutor
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property periodoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnperiodo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property data_inicioColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndata_inicio
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property data_fimColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndata_fim
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property horario_inicioColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnhorario_inicio
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property horario_fimColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnhorario_fim
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property alunoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnaluno
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As tb_aula_teoricaRow
            Get
                Return CType(Me.Rows(index),tb_aula_teoricaRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event tb_aula_teoricaRowChanging As tb_aula_teoricaRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event tb_aula_teoricaRowChanged As tb_aula_teoricaRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event tb_aula_teoricaRowDeleting As tb_aula_teoricaRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event tb_aula_teoricaRowDeleted As tb_aula_teoricaRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Sub Addtb_aula_teoricaRow(ByVal row As tb_aula_teoricaRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Function Addtb_aula_teoricaRow(ByVal periodo As String, ByVal data_inicio As Date, ByVal data_fim As Date, ByVal horario_inicio As Date, ByVal horario_fim As Date, ByVal aluno As String) As tb_aula_teoricaRow
            Dim rowtb_aula_teoricaRow As tb_aula_teoricaRow = CType(Me.NewRow,tb_aula_teoricaRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, periodo, data_inicio, data_fim, horario_inicio, horario_fim, aluno}
            rowtb_aula_teoricaRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowtb_aula_teoricaRow)
            Return rowtb_aula_teoricaRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function FindBycod_instrutor(ByVal cod_instrutor As Integer) As tb_aula_teoricaRow
            Return CType(Me.Rows.Find(New Object() {cod_instrutor}),tb_aula_teoricaRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As tb_aula_teoricaDataTable = CType(MyBase.Clone,tb_aula_teoricaDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New tb_aula_teoricaDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub InitVars()
            Me.columncod_instrutor = MyBase.Columns("cod_instrutor")
            Me.columnperiodo = MyBase.Columns("periodo")
            Me.columndata_inicio = MyBase.Columns("data_inicio")
            Me.columndata_fim = MyBase.Columns("data_fim")
            Me.columnhorario_inicio = MyBase.Columns("horario_inicio")
            Me.columnhorario_fim = MyBase.Columns("horario_fim")
            Me.columnaluno = MyBase.Columns("aluno")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitClass()
            Me.columncod_instrutor = New Global.System.Data.DataColumn("cod_instrutor", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncod_instrutor)
            Me.columnperiodo = New Global.System.Data.DataColumn("periodo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnperiodo)
            Me.columndata_inicio = New Global.System.Data.DataColumn("data_inicio", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndata_inicio)
            Me.columndata_fim = New Global.System.Data.DataColumn("data_fim", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndata_fim)
            Me.columnhorario_inicio = New Global.System.Data.DataColumn("horario_inicio", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnhorario_inicio)
            Me.columnhorario_fim = New Global.System.Data.DataColumn("horario_fim", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnhorario_fim)
            Me.columnaluno = New Global.System.Data.DataColumn("aluno", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnaluno)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columncod_instrutor}, true))
            Me.columncod_instrutor.AutoIncrement = true
            Me.columncod_instrutor.AutoIncrementSeed = -1
            Me.columncod_instrutor.AutoIncrementStep = -1
            Me.columncod_instrutor.AllowDBNull = false
            Me.columncod_instrutor.Unique = true
            Me.columnperiodo.MaxLength = 255
            Me.columnaluno.MaxLength = 255
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Newtb_aula_teoricaRow() As tb_aula_teoricaRow
            Return CType(Me.NewRow,tb_aula_teoricaRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New tb_aula_teoricaRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(tb_aula_teoricaRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.tb_aula_teoricaRowChangedEvent) Is Nothing) Then
                RaiseEvent tb_aula_teoricaRowChanged(Me, New tb_aula_teoricaRowChangeEvent(CType(e.Row,tb_aula_teoricaRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.tb_aula_teoricaRowChangingEvent) Is Nothing) Then
                RaiseEvent tb_aula_teoricaRowChanging(Me, New tb_aula_teoricaRowChangeEvent(CType(e.Row,tb_aula_teoricaRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.tb_aula_teoricaRowDeletedEvent) Is Nothing) Then
                RaiseEvent tb_aula_teoricaRowDeleted(Me, New tb_aula_teoricaRowChangeEvent(CType(e.Row,tb_aula_teoricaRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.tb_aula_teoricaRowDeletingEvent) Is Nothing) Then
                RaiseEvent tb_aula_teoricaRowDeleting(Me, New tb_aula_teoricaRowChangeEvent(CType(e.Row,tb_aula_teoricaRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Removetb_aula_teoricaRow(ByVal row As tb_aula_teoricaRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As autoescola_dbDataSet = New autoescola_dbDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "tb_aula_teoricaDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class tb_carroDataTable
        Inherits Global.System.Data.TypedTableBase(Of tb_carroRow)
        
        Private columnplaca As Global.System.Data.DataColumn
        
        Private columnmodelo As Global.System.Data.DataColumn
        
        Private columnmarca As Global.System.Data.DataColumn
        
        Private columnano As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "tb_carro"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property placaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnplaca
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property modeloColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmodelo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property marcaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmarca
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property anoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnano
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As tb_carroRow
            Get
                Return CType(Me.Rows(index),tb_carroRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event tb_carroRowChanging As tb_carroRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event tb_carroRowChanged As tb_carroRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event tb_carroRowDeleting As tb_carroRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event tb_carroRowDeleted As tb_carroRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Sub Addtb_carroRow(ByVal row As tb_carroRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Function Addtb_carroRow(ByVal placa As String, ByVal modelo As String, ByVal marca As String, ByVal ano As String) As tb_carroRow
            Dim rowtb_carroRow As tb_carroRow = CType(Me.NewRow,tb_carroRow)
            Dim columnValuesArray() As Object = New Object() {placa, modelo, marca, ano}
            rowtb_carroRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowtb_carroRow)
            Return rowtb_carroRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function FindByplaca(ByVal placa As String) As tb_carroRow
            Return CType(Me.Rows.Find(New Object() {placa}),tb_carroRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As tb_carroDataTable = CType(MyBase.Clone,tb_carroDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New tb_carroDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnplaca = MyBase.Columns("placa")
            Me.columnmodelo = MyBase.Columns("modelo")
            Me.columnmarca = MyBase.Columns("marca")
            Me.columnano = MyBase.Columns("ano")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitClass()
            Me.columnplaca = New Global.System.Data.DataColumn("placa", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnplaca)
            Me.columnmodelo = New Global.System.Data.DataColumn("modelo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmodelo)
            Me.columnmarca = New Global.System.Data.DataColumn("marca", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmarca)
            Me.columnano = New Global.System.Data.DataColumn("ano", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnano)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnplaca}, true))
            Me.columnplaca.AllowDBNull = false
            Me.columnplaca.Unique = true
            Me.columnplaca.MaxLength = 10
            Me.columnmodelo.MaxLength = 255
            Me.columnmarca.MaxLength = 255
            Me.columnano.MaxLength = 255
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Newtb_carroRow() As tb_carroRow
            Return CType(Me.NewRow,tb_carroRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New tb_carroRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(tb_carroRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.tb_carroRowChangedEvent) Is Nothing) Then
                RaiseEvent tb_carroRowChanged(Me, New tb_carroRowChangeEvent(CType(e.Row,tb_carroRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.tb_carroRowChangingEvent) Is Nothing) Then
                RaiseEvent tb_carroRowChanging(Me, New tb_carroRowChangeEvent(CType(e.Row,tb_carroRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.tb_carroRowDeletedEvent) Is Nothing) Then
                RaiseEvent tb_carroRowDeleted(Me, New tb_carroRowChangeEvent(CType(e.Row,tb_carroRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.tb_carroRowDeletingEvent) Is Nothing) Then
                RaiseEvent tb_carroRowDeleting(Me, New tb_carroRowChangeEvent(CType(e.Row,tb_carroRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Removetb_carroRow(ByVal row As tb_carroRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As autoescola_dbDataSet = New autoescola_dbDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "tb_carroDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class tb_instrutorDataTable
        Inherits Global.System.Data.TypedTableBase(Of tb_instrutorRow)
        
        Private columncpf_instrutor As Global.System.Data.DataColumn
        
        Private columncod_instrutor As Global.System.Data.DataColumn
        
        Private columnnome_instrutor As Global.System.Data.DataColumn
        
        Private columndata_nasc_instrutor As Global.System.Data.DataColumn
        
        Private columnrg_instrutor As Global.System.Data.DataColumn
        
        Private columncep_instrutor As Global.System.Data.DataColumn
        
        Private columnendereco_instrutor As Global.System.Data.DataColumn
        
        Private columncomp_instrutor As Global.System.Data.DataColumn
        
        Private columnbairro_instrutor As Global.System.Data.DataColumn
        
        Private columncidade_instrutor As Global.System.Data.DataColumn
        
        Private columnuf_instrutor As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "tb_instrutor"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property cpf_instrutorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncpf_instrutor
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property cod_instrutorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncod_instrutor
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property nome_instrutorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnome_instrutor
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property data_nasc_instrutorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndata_nasc_instrutor
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property rg_instrutorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnrg_instrutor
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property cep_instrutorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncep_instrutor
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property endereco_instrutorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnendereco_instrutor
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property comp_instrutorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncomp_instrutor
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property bairro_instrutorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnbairro_instrutor
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property cidade_instrutorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncidade_instrutor
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property uf_instrutorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnuf_instrutor
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As tb_instrutorRow
            Get
                Return CType(Me.Rows(index),tb_instrutorRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event tb_instrutorRowChanging As tb_instrutorRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event tb_instrutorRowChanged As tb_instrutorRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event tb_instrutorRowDeleting As tb_instrutorRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event tb_instrutorRowDeleted As tb_instrutorRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Sub Addtb_instrutorRow(ByVal row As tb_instrutorRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Function Addtb_instrutorRow(ByVal cpf_instrutor As String, ByVal parenttb_agendaRowBytb_agendatb_instrutor As tb_agendaRow, ByVal nome_instrutor As String, ByVal data_nasc_instrutor As Date, ByVal rg_instrutor As String, ByVal cep_instrutor As String, ByVal endereco_instrutor As String, ByVal comp_instrutor As String, ByVal bairro_instrutor As String, ByVal cidade_instrutor As String, ByVal uf_instrutor As String) As tb_instrutorRow
            Dim rowtb_instrutorRow As tb_instrutorRow = CType(Me.NewRow,tb_instrutorRow)
            Dim columnValuesArray() As Object = New Object() {cpf_instrutor, Nothing, nome_instrutor, data_nasc_instrutor, rg_instrutor, cep_instrutor, endereco_instrutor, comp_instrutor, bairro_instrutor, cidade_instrutor, uf_instrutor}
            If (Not (parenttb_agendaRowBytb_agendatb_instrutor) Is Nothing) Then
                columnValuesArray(1) = parenttb_agendaRowBytb_agendatb_instrutor(0)
            End If
            rowtb_instrutorRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowtb_instrutorRow)
            Return rowtb_instrutorRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function FindBycpf_instrutor(ByVal cpf_instrutor As String) As tb_instrutorRow
            Return CType(Me.Rows.Find(New Object() {cpf_instrutor}),tb_instrutorRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As tb_instrutorDataTable = CType(MyBase.Clone,tb_instrutorDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New tb_instrutorDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub InitVars()
            Me.columncpf_instrutor = MyBase.Columns("cpf_instrutor")
            Me.columncod_instrutor = MyBase.Columns("cod_instrutor")
            Me.columnnome_instrutor = MyBase.Columns("nome_instrutor")
            Me.columndata_nasc_instrutor = MyBase.Columns("data_nasc_instrutor")
            Me.columnrg_instrutor = MyBase.Columns("rg_instrutor")
            Me.columncep_instrutor = MyBase.Columns("cep_instrutor")
            Me.columnendereco_instrutor = MyBase.Columns("endereco_instrutor")
            Me.columncomp_instrutor = MyBase.Columns("comp_instrutor")
            Me.columnbairro_instrutor = MyBase.Columns("bairro_instrutor")
            Me.columncidade_instrutor = MyBase.Columns("cidade_instrutor")
            Me.columnuf_instrutor = MyBase.Columns("uf_instrutor")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitClass()
            Me.columncpf_instrutor = New Global.System.Data.DataColumn("cpf_instrutor", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncpf_instrutor)
            Me.columncod_instrutor = New Global.System.Data.DataColumn("cod_instrutor", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncod_instrutor)
            Me.columnnome_instrutor = New Global.System.Data.DataColumn("nome_instrutor", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnome_instrutor)
            Me.columndata_nasc_instrutor = New Global.System.Data.DataColumn("data_nasc_instrutor", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndata_nasc_instrutor)
            Me.columnrg_instrutor = New Global.System.Data.DataColumn("rg_instrutor", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnrg_instrutor)
            Me.columncep_instrutor = New Global.System.Data.DataColumn("cep_instrutor", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncep_instrutor)
            Me.columnendereco_instrutor = New Global.System.Data.DataColumn("endereco_instrutor", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnendereco_instrutor)
            Me.columncomp_instrutor = New Global.System.Data.DataColumn("comp_instrutor", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncomp_instrutor)
            Me.columnbairro_instrutor = New Global.System.Data.DataColumn("bairro_instrutor", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnbairro_instrutor)
            Me.columncidade_instrutor = New Global.System.Data.DataColumn("cidade_instrutor", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncidade_instrutor)
            Me.columnuf_instrutor = New Global.System.Data.DataColumn("uf_instrutor", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnuf_instrutor)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columncpf_instrutor}, true))
            Me.columncpf_instrutor.AllowDBNull = false
            Me.columncpf_instrutor.Unique = true
            Me.columncpf_instrutor.MaxLength = 255
            Me.columncod_instrutor.MaxLength = 255
            Me.columnnome_instrutor.MaxLength = 60
            Me.columnrg_instrutor.MaxLength = 255
            Me.columncep_instrutor.MaxLength = 255
            Me.columnendereco_instrutor.MaxLength = 60
            Me.columncomp_instrutor.MaxLength = 40
            Me.columnbairro_instrutor.MaxLength = 30
            Me.columncidade_instrutor.MaxLength = 40
            Me.columnuf_instrutor.MaxLength = 2
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Newtb_instrutorRow() As tb_instrutorRow
            Return CType(Me.NewRow,tb_instrutorRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New tb_instrutorRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(tb_instrutorRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.tb_instrutorRowChangedEvent) Is Nothing) Then
                RaiseEvent tb_instrutorRowChanged(Me, New tb_instrutorRowChangeEvent(CType(e.Row,tb_instrutorRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.tb_instrutorRowChangingEvent) Is Nothing) Then
                RaiseEvent tb_instrutorRowChanging(Me, New tb_instrutorRowChangeEvent(CType(e.Row,tb_instrutorRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.tb_instrutorRowDeletedEvent) Is Nothing) Then
                RaiseEvent tb_instrutorRowDeleted(Me, New tb_instrutorRowChangeEvent(CType(e.Row,tb_instrutorRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.tb_instrutorRowDeletingEvent) Is Nothing) Then
                RaiseEvent tb_instrutorRowDeleting(Me, New tb_instrutorRowChangeEvent(CType(e.Row,tb_instrutorRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Removetb_instrutorRow(ByVal row As tb_instrutorRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As autoescola_dbDataSet = New autoescola_dbDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "tb_instrutorDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class tb_pagamentoDataTable
        Inherits Global.System.Data.TypedTableBase(Of tb_pagamentoRow)
        
        Private columncpf_aluno As Global.System.Data.DataColumn
        
        Private columnnome_aluno As Global.System.Data.DataColumn
        
        Private columncartao As Global.System.Data.DataColumn
        
        Private columnvalor_total As Global.System.Data.DataColumn
        
        Private columnvalor_pago As Global.System.Data.DataColumn
        
        Private columnsituacao As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "tb_pagamento"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property cpf_alunoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncpf_aluno
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property nome_alunoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnome_aluno
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property cartaoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncartao
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property valor_totalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnvalor_total
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property valor_pagoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnvalor_pago
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property situacaoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsituacao
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As tb_pagamentoRow
            Get
                Return CType(Me.Rows(index),tb_pagamentoRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event tb_pagamentoRowChanging As tb_pagamentoRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event tb_pagamentoRowChanged As tb_pagamentoRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event tb_pagamentoRowDeleting As tb_pagamentoRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event tb_pagamentoRowDeleted As tb_pagamentoRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Sub Addtb_pagamentoRow(ByVal row As tb_pagamentoRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Function Addtb_pagamentoRow(ByVal cpf_aluno As String, ByVal nome_aluno As String, ByVal cartao As String, ByVal valor_total As Decimal, ByVal valor_pago As Decimal, ByVal situacao As String) As tb_pagamentoRow
            Dim rowtb_pagamentoRow As tb_pagamentoRow = CType(Me.NewRow,tb_pagamentoRow)
            Dim columnValuesArray() As Object = New Object() {cpf_aluno, nome_aluno, cartao, valor_total, valor_pago, situacao}
            rowtb_pagamentoRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowtb_pagamentoRow)
            Return rowtb_pagamentoRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function FindBycpf_aluno(ByVal cpf_aluno As String) As tb_pagamentoRow
            Return CType(Me.Rows.Find(New Object() {cpf_aluno}),tb_pagamentoRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As tb_pagamentoDataTable = CType(MyBase.Clone,tb_pagamentoDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New tb_pagamentoDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub InitVars()
            Me.columncpf_aluno = MyBase.Columns("cpf_aluno")
            Me.columnnome_aluno = MyBase.Columns("nome_aluno")
            Me.columncartao = MyBase.Columns("cartao")
            Me.columnvalor_total = MyBase.Columns("valor_total")
            Me.columnvalor_pago = MyBase.Columns("valor_pago")
            Me.columnsituacao = MyBase.Columns("situacao")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitClass()
            Me.columncpf_aluno = New Global.System.Data.DataColumn("cpf_aluno", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncpf_aluno)
            Me.columnnome_aluno = New Global.System.Data.DataColumn("nome_aluno", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnome_aluno)
            Me.columncartao = New Global.System.Data.DataColumn("cartao", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncartao)
            Me.columnvalor_total = New Global.System.Data.DataColumn("valor_total", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnvalor_total)
            Me.columnvalor_pago = New Global.System.Data.DataColumn("valor_pago", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnvalor_pago)
            Me.columnsituacao = New Global.System.Data.DataColumn("situacao", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsituacao)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columncpf_aluno}, true))
            Me.columncpf_aluno.AllowDBNull = false
            Me.columncpf_aluno.Unique = true
            Me.columncpf_aluno.MaxLength = 15
            Me.columnnome_aluno.MaxLength = 255
            Me.columncartao.MaxLength = 255
            Me.columnsituacao.MaxLength = 255
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Newtb_pagamentoRow() As tb_pagamentoRow
            Return CType(Me.NewRow,tb_pagamentoRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New tb_pagamentoRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(tb_pagamentoRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.tb_pagamentoRowChangedEvent) Is Nothing) Then
                RaiseEvent tb_pagamentoRowChanged(Me, New tb_pagamentoRowChangeEvent(CType(e.Row,tb_pagamentoRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.tb_pagamentoRowChangingEvent) Is Nothing) Then
                RaiseEvent tb_pagamentoRowChanging(Me, New tb_pagamentoRowChangeEvent(CType(e.Row,tb_pagamentoRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.tb_pagamentoRowDeletedEvent) Is Nothing) Then
                RaiseEvent tb_pagamentoRowDeleted(Me, New tb_pagamentoRowChangeEvent(CType(e.Row,tb_pagamentoRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.tb_pagamentoRowDeletingEvent) Is Nothing) Then
                RaiseEvent tb_pagamentoRowDeleting(Me, New tb_pagamentoRowChangeEvent(CType(e.Row,tb_pagamentoRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Removetb_pagamentoRow(ByVal row As tb_pagamentoRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As autoescola_dbDataSet = New autoescola_dbDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "tb_pagamentoDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class tb_agendaRow
        Inherits Global.System.Data.DataRow
        
        Private tabletb_agenda As tb_agendaDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tabletb_agenda = CType(Me.Table,tb_agendaDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property cod_instrutor() As String
            Get
                Return CType(Me(Me.tabletb_agenda.cod_instrutorColumn),String)
            End Get
            Set
                Me(Me.tabletb_agenda.cod_instrutorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property carro() As String
            Get
                Try 
                    Return CType(Me(Me.tabletb_agenda.carroColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'carro' na tabela 'tb_agenda' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletb_agenda.carroColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property aluno() As String
            Get
                Try 
                    Return CType(Me(Me.tabletb_agenda.alunoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'aluno' na tabela 'tb_agenda' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletb_agenda.alunoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property data() As Date
            Get
                Try 
                    Return CType(Me(Me.tabletb_agenda.dataColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'data' na tabela 'tb_agenda' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletb_agenda.dataColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property horario_inicio() As Date
            Get
                Try 
                    Return CType(Me(Me.tabletb_agenda.horario_inicioColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'horario_inicio' na tabela 'tb_agenda' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletb_agenda.horario_inicioColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property horario_fim() As Date
            Get
                Try 
                    Return CType(Me(Me.tabletb_agenda.horario_fimColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'horario_fim' na tabela 'tb_agenda' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletb_agenda.horario_fimColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property tb_alunoRow() As tb_alunoRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("tb_alunotb_agenda")),tb_alunoRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("tb_alunotb_agenda"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property tb_carroRow() As tb_carroRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("tb_carrotb_agenda")),tb_carroRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("tb_carrotb_agenda"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IscarroNull() As Boolean
            Return Me.IsNull(Me.tabletb_agenda.carroColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetcarroNull()
            Me(Me.tabletb_agenda.carroColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsalunoNull() As Boolean
            Return Me.IsNull(Me.tabletb_agenda.alunoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetalunoNull()
            Me(Me.tabletb_agenda.alunoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsdataNull() As Boolean
            Return Me.IsNull(Me.tabletb_agenda.dataColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetdataNull()
            Me(Me.tabletb_agenda.dataColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Ishorario_inicioNull() As Boolean
            Return Me.IsNull(Me.tabletb_agenda.horario_inicioColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Sethorario_inicioNull()
            Me(Me.tabletb_agenda.horario_inicioColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Ishorario_fimNull() As Boolean
            Return Me.IsNull(Me.tabletb_agenda.horario_fimColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Sethorario_fimNull()
            Me(Me.tabletb_agenda.horario_fimColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Gettb_instrutorRows() As tb_instrutorRow()
            If (Me.Table.ChildRelations("tb_agendatb_instrutor") Is Nothing) Then
                Return New tb_instrutorRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("tb_agendatb_instrutor")),tb_instrutorRow())
            End If
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class tb_alunoRow
        Inherits Global.System.Data.DataRow
        
        Private tabletb_aluno As tb_alunoDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tabletb_aluno = CType(Me.Table,tb_alunoDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property cpf_aluno() As String
            Get
                Return CType(Me(Me.tabletb_aluno.cpf_alunoColumn),String)
            End Get
            Set
                Me(Me.tabletb_aluno.cpf_alunoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property nome_aluno() As String
            Get
                Try 
                    Return CType(Me(Me.tabletb_aluno.nome_alunoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'nome_aluno' na tabela 'tb_aluno' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletb_aluno.nome_alunoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property data_nasc_aluno() As Date
            Get
                Try 
                    Return CType(Me(Me.tabletb_aluno.data_nasc_alunoColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'data_nasc_aluno' na tabela 'tb_aluno' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletb_aluno.data_nasc_alunoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property rg_aluno() As String
            Get
                Try 
                    Return CType(Me(Me.tabletb_aluno.rg_alunoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'rg_aluno' na tabela 'tb_aluno' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletb_aluno.rg_alunoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property cep_aluno() As String
            Get
                Try 
                    Return CType(Me(Me.tabletb_aluno.cep_alunoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'cep_aluno' na tabela 'tb_aluno' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletb_aluno.cep_alunoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property endereco_aluno() As String
            Get
                Try 
                    Return CType(Me(Me.tabletb_aluno.endereco_alunoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'endereco_aluno' na tabela 'tb_aluno' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletb_aluno.endereco_alunoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property comp_aluno() As String
            Get
                Try 
                    Return CType(Me(Me.tabletb_aluno.comp_alunoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'comp_aluno' na tabela 'tb_aluno' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletb_aluno.comp_alunoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property bairro_aluno() As String
            Get
                Try 
                    Return CType(Me(Me.tabletb_aluno.bairro_alunoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'bairro_aluno' na tabela 'tb_aluno' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletb_aluno.bairro_alunoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property cidade_aluno() As String
            Get
                Try 
                    Return CType(Me(Me.tabletb_aluno.cidade_alunoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'cidade_aluno' na tabela 'tb_aluno' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletb_aluno.cidade_alunoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property uf_aluno() As String
            Get
                Try 
                    Return CType(Me(Me.tabletb_aluno.uf_alunoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'uf_aluno' na tabela 'tb_aluno' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletb_aluno.uf_alunoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property img_aluno() As String
            Get
                Try 
                    Return CType(Me(Me.tabletb_aluno.img_alunoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'img_aluno' na tabela 'tb_aluno' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletb_aluno.img_alunoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Isnome_alunoNull() As Boolean
            Return Me.IsNull(Me.tabletb_aluno.nome_alunoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setnome_alunoNull()
            Me(Me.tabletb_aluno.nome_alunoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Isdata_nasc_alunoNull() As Boolean
            Return Me.IsNull(Me.tabletb_aluno.data_nasc_alunoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setdata_nasc_alunoNull()
            Me(Me.tabletb_aluno.data_nasc_alunoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Isrg_alunoNull() As Boolean
            Return Me.IsNull(Me.tabletb_aluno.rg_alunoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setrg_alunoNull()
            Me(Me.tabletb_aluno.rg_alunoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Iscep_alunoNull() As Boolean
            Return Me.IsNull(Me.tabletb_aluno.cep_alunoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setcep_alunoNull()
            Me(Me.tabletb_aluno.cep_alunoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Isendereco_alunoNull() As Boolean
            Return Me.IsNull(Me.tabletb_aluno.endereco_alunoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setendereco_alunoNull()
            Me(Me.tabletb_aluno.endereco_alunoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Iscomp_alunoNull() As Boolean
            Return Me.IsNull(Me.tabletb_aluno.comp_alunoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setcomp_alunoNull()
            Me(Me.tabletb_aluno.comp_alunoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Isbairro_alunoNull() As Boolean
            Return Me.IsNull(Me.tabletb_aluno.bairro_alunoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setbairro_alunoNull()
            Me(Me.tabletb_aluno.bairro_alunoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Iscidade_alunoNull() As Boolean
            Return Me.IsNull(Me.tabletb_aluno.cidade_alunoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setcidade_alunoNull()
            Me(Me.tabletb_aluno.cidade_alunoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Isuf_alunoNull() As Boolean
            Return Me.IsNull(Me.tabletb_aluno.uf_alunoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setuf_alunoNull()
            Me(Me.tabletb_aluno.uf_alunoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Isimg_alunoNull() As Boolean
            Return Me.IsNull(Me.tabletb_aluno.img_alunoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setimg_alunoNull()
            Me(Me.tabletb_aluno.img_alunoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Gettb_agendaRows() As tb_agendaRow()
            If (Me.Table.ChildRelations("tb_alunotb_agenda") Is Nothing) Then
                Return New tb_agendaRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("tb_alunotb_agenda")),tb_agendaRow())
            End If
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class tb_aula_praticaRow
        Inherits Global.System.Data.DataRow
        
        Private tabletb_aula_pratica As tb_aula_praticaDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tabletb_aula_pratica = CType(Me.Table,tb_aula_praticaDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property cod_instrutor() As Integer
            Get
                Return CType(Me(Me.tabletb_aula_pratica.cod_instrutorColumn),Integer)
            End Get
            Set
                Me(Me.tabletb_aula_pratica.cod_instrutorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property aluno() As String
            Get
                Try 
                    Return CType(Me(Me.tabletb_aula_pratica.alunoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'aluno' na tabela 'tb_aula_pratica' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletb_aula_pratica.alunoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property carro() As String
            Get
                Try 
                    Return CType(Me(Me.tabletb_aula_pratica.carroColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'carro' na tabela 'tb_aula_pratica' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletb_aula_pratica.carroColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property data() As Date
            Get
                Try 
                    Return CType(Me(Me.tabletb_aula_pratica.dataColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'data' na tabela 'tb_aula_pratica' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletb_aula_pratica.dataColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property horario_inicio() As Date
            Get
                Try 
                    Return CType(Me(Me.tabletb_aula_pratica.horario_inicioColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'horario_inicio' na tabela 'tb_aula_pratica' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletb_aula_pratica.horario_inicioColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property horario_fim() As Date
            Get
                Try 
                    Return CType(Me(Me.tabletb_aula_pratica.horario_fimColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'horario_fim' na tabela 'tb_aula_pratica' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletb_aula_pratica.horario_fimColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property presenca() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletb_aula_pratica.presencaColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'presenca' na tabela 'tb_aula_pratica' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletb_aula_pratica.presencaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsalunoNull() As Boolean
            Return Me.IsNull(Me.tabletb_aula_pratica.alunoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetalunoNull()
            Me(Me.tabletb_aula_pratica.alunoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IscarroNull() As Boolean
            Return Me.IsNull(Me.tabletb_aula_pratica.carroColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetcarroNull()
            Me(Me.tabletb_aula_pratica.carroColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsdataNull() As Boolean
            Return Me.IsNull(Me.tabletb_aula_pratica.dataColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetdataNull()
            Me(Me.tabletb_aula_pratica.dataColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Ishorario_inicioNull() As Boolean
            Return Me.IsNull(Me.tabletb_aula_pratica.horario_inicioColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Sethorario_inicioNull()
            Me(Me.tabletb_aula_pratica.horario_inicioColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Ishorario_fimNull() As Boolean
            Return Me.IsNull(Me.tabletb_aula_pratica.horario_fimColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Sethorario_fimNull()
            Me(Me.tabletb_aula_pratica.horario_fimColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IspresencaNull() As Boolean
            Return Me.IsNull(Me.tabletb_aula_pratica.presencaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetpresencaNull()
            Me(Me.tabletb_aula_pratica.presencaColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class tb_aula_teoricaRow
        Inherits Global.System.Data.DataRow
        
        Private tabletb_aula_teorica As tb_aula_teoricaDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tabletb_aula_teorica = CType(Me.Table,tb_aula_teoricaDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property cod_instrutor() As Integer
            Get
                Return CType(Me(Me.tabletb_aula_teorica.cod_instrutorColumn),Integer)
            End Get
            Set
                Me(Me.tabletb_aula_teorica.cod_instrutorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property periodo() As String
            Get
                Try 
                    Return CType(Me(Me.tabletb_aula_teorica.periodoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'periodo' na tabela 'tb_aula_teorica' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletb_aula_teorica.periodoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property data_inicio() As Date
            Get
                Try 
                    Return CType(Me(Me.tabletb_aula_teorica.data_inicioColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'data_inicio' na tabela 'tb_aula_teorica' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletb_aula_teorica.data_inicioColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property data_fim() As Date
            Get
                Try 
                    Return CType(Me(Me.tabletb_aula_teorica.data_fimColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'data_fim' na tabela 'tb_aula_teorica' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletb_aula_teorica.data_fimColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property horario_inicio() As Date
            Get
                Try 
                    Return CType(Me(Me.tabletb_aula_teorica.horario_inicioColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'horario_inicio' na tabela 'tb_aula_teorica' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletb_aula_teorica.horario_inicioColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property horario_fim() As Date
            Get
                Try 
                    Return CType(Me(Me.tabletb_aula_teorica.horario_fimColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'horario_fim' na tabela 'tb_aula_teorica' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletb_aula_teorica.horario_fimColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property aluno() As String
            Get
                Try 
                    Return CType(Me(Me.tabletb_aula_teorica.alunoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'aluno' na tabela 'tb_aula_teorica' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletb_aula_teorica.alunoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsperiodoNull() As Boolean
            Return Me.IsNull(Me.tabletb_aula_teorica.periodoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetperiodoNull()
            Me(Me.tabletb_aula_teorica.periodoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Isdata_inicioNull() As Boolean
            Return Me.IsNull(Me.tabletb_aula_teorica.data_inicioColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setdata_inicioNull()
            Me(Me.tabletb_aula_teorica.data_inicioColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Isdata_fimNull() As Boolean
            Return Me.IsNull(Me.tabletb_aula_teorica.data_fimColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setdata_fimNull()
            Me(Me.tabletb_aula_teorica.data_fimColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Ishorario_inicioNull() As Boolean
            Return Me.IsNull(Me.tabletb_aula_teorica.horario_inicioColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Sethorario_inicioNull()
            Me(Me.tabletb_aula_teorica.horario_inicioColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Ishorario_fimNull() As Boolean
            Return Me.IsNull(Me.tabletb_aula_teorica.horario_fimColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Sethorario_fimNull()
            Me(Me.tabletb_aula_teorica.horario_fimColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsalunoNull() As Boolean
            Return Me.IsNull(Me.tabletb_aula_teorica.alunoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetalunoNull()
            Me(Me.tabletb_aula_teorica.alunoColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class tb_carroRow
        Inherits Global.System.Data.DataRow
        
        Private tabletb_carro As tb_carroDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tabletb_carro = CType(Me.Table,tb_carroDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property placa() As String
            Get
                Return CType(Me(Me.tabletb_carro.placaColumn),String)
            End Get
            Set
                Me(Me.tabletb_carro.placaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property modelo() As String
            Get
                Try 
                    Return CType(Me(Me.tabletb_carro.modeloColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'modelo' na tabela 'tb_carro' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletb_carro.modeloColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property marca() As String
            Get
                Try 
                    Return CType(Me(Me.tabletb_carro.marcaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'marca' na tabela 'tb_carro' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletb_carro.marcaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ano() As String
            Get
                Try 
                    Return CType(Me(Me.tabletb_carro.anoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'ano' na tabela 'tb_carro' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletb_carro.anoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsmodeloNull() As Boolean
            Return Me.IsNull(Me.tabletb_carro.modeloColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetmodeloNull()
            Me(Me.tabletb_carro.modeloColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsmarcaNull() As Boolean
            Return Me.IsNull(Me.tabletb_carro.marcaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetmarcaNull()
            Me(Me.tabletb_carro.marcaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsanoNull() As Boolean
            Return Me.IsNull(Me.tabletb_carro.anoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetanoNull()
            Me(Me.tabletb_carro.anoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Gettb_agendaRows() As tb_agendaRow()
            If (Me.Table.ChildRelations("tb_carrotb_agenda") Is Nothing) Then
                Return New tb_agendaRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("tb_carrotb_agenda")),tb_agendaRow())
            End If
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class tb_instrutorRow
        Inherits Global.System.Data.DataRow
        
        Private tabletb_instrutor As tb_instrutorDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tabletb_instrutor = CType(Me.Table,tb_instrutorDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property cpf_instrutor() As String
            Get
                Return CType(Me(Me.tabletb_instrutor.cpf_instrutorColumn),String)
            End Get
            Set
                Me(Me.tabletb_instrutor.cpf_instrutorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property cod_instrutor() As String
            Get
                Try 
                    Return CType(Me(Me.tabletb_instrutor.cod_instrutorColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'cod_instrutor' na tabela 'tb_instrutor' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletb_instrutor.cod_instrutorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property nome_instrutor() As String
            Get
                Try 
                    Return CType(Me(Me.tabletb_instrutor.nome_instrutorColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'nome_instrutor' na tabela 'tb_instrutor' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletb_instrutor.nome_instrutorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property data_nasc_instrutor() As Date
            Get
                Try 
                    Return CType(Me(Me.tabletb_instrutor.data_nasc_instrutorColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'data_nasc_instrutor' na tabela 'tb_instrutor' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletb_instrutor.data_nasc_instrutorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property rg_instrutor() As String
            Get
                Try 
                    Return CType(Me(Me.tabletb_instrutor.rg_instrutorColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'rg_instrutor' na tabela 'tb_instrutor' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletb_instrutor.rg_instrutorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property cep_instrutor() As String
            Get
                Try 
                    Return CType(Me(Me.tabletb_instrutor.cep_instrutorColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'cep_instrutor' na tabela 'tb_instrutor' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletb_instrutor.cep_instrutorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property endereco_instrutor() As String
            Get
                Try 
                    Return CType(Me(Me.tabletb_instrutor.endereco_instrutorColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'endereco_instrutor' na tabela 'tb_instrutor' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletb_instrutor.endereco_instrutorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property comp_instrutor() As String
            Get
                Try 
                    Return CType(Me(Me.tabletb_instrutor.comp_instrutorColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'comp_instrutor' na tabela 'tb_instrutor' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletb_instrutor.comp_instrutorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property bairro_instrutor() As String
            Get
                Try 
                    Return CType(Me(Me.tabletb_instrutor.bairro_instrutorColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'bairro_instrutor' na tabela 'tb_instrutor' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletb_instrutor.bairro_instrutorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property cidade_instrutor() As String
            Get
                Try 
                    Return CType(Me(Me.tabletb_instrutor.cidade_instrutorColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'cidade_instrutor' na tabela 'tb_instrutor' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletb_instrutor.cidade_instrutorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property uf_instrutor() As String
            Get
                Try 
                    Return CType(Me(Me.tabletb_instrutor.uf_instrutorColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'uf_instrutor' na tabela 'tb_instrutor' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletb_instrutor.uf_instrutorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property tb_agendaRow() As tb_agendaRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("tb_agendatb_instrutor")),tb_agendaRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("tb_agendatb_instrutor"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Iscod_instrutorNull() As Boolean
            Return Me.IsNull(Me.tabletb_instrutor.cod_instrutorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setcod_instrutorNull()
            Me(Me.tabletb_instrutor.cod_instrutorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Isnome_instrutorNull() As Boolean
            Return Me.IsNull(Me.tabletb_instrutor.nome_instrutorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setnome_instrutorNull()
            Me(Me.tabletb_instrutor.nome_instrutorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Isdata_nasc_instrutorNull() As Boolean
            Return Me.IsNull(Me.tabletb_instrutor.data_nasc_instrutorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setdata_nasc_instrutorNull()
            Me(Me.tabletb_instrutor.data_nasc_instrutorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Isrg_instrutorNull() As Boolean
            Return Me.IsNull(Me.tabletb_instrutor.rg_instrutorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setrg_instrutorNull()
            Me(Me.tabletb_instrutor.rg_instrutorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Iscep_instrutorNull() As Boolean
            Return Me.IsNull(Me.tabletb_instrutor.cep_instrutorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setcep_instrutorNull()
            Me(Me.tabletb_instrutor.cep_instrutorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Isendereco_instrutorNull() As Boolean
            Return Me.IsNull(Me.tabletb_instrutor.endereco_instrutorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setendereco_instrutorNull()
            Me(Me.tabletb_instrutor.endereco_instrutorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Iscomp_instrutorNull() As Boolean
            Return Me.IsNull(Me.tabletb_instrutor.comp_instrutorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setcomp_instrutorNull()
            Me(Me.tabletb_instrutor.comp_instrutorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Isbairro_instrutorNull() As Boolean
            Return Me.IsNull(Me.tabletb_instrutor.bairro_instrutorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setbairro_instrutorNull()
            Me(Me.tabletb_instrutor.bairro_instrutorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Iscidade_instrutorNull() As Boolean
            Return Me.IsNull(Me.tabletb_instrutor.cidade_instrutorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setcidade_instrutorNull()
            Me(Me.tabletb_instrutor.cidade_instrutorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Isuf_instrutorNull() As Boolean
            Return Me.IsNull(Me.tabletb_instrutor.uf_instrutorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setuf_instrutorNull()
            Me(Me.tabletb_instrutor.uf_instrutorColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class tb_pagamentoRow
        Inherits Global.System.Data.DataRow
        
        Private tabletb_pagamento As tb_pagamentoDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tabletb_pagamento = CType(Me.Table,tb_pagamentoDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property cpf_aluno() As String
            Get
                Return CType(Me(Me.tabletb_pagamento.cpf_alunoColumn),String)
            End Get
            Set
                Me(Me.tabletb_pagamento.cpf_alunoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property nome_aluno() As String
            Get
                Try 
                    Return CType(Me(Me.tabletb_pagamento.nome_alunoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'nome_aluno' na tabela 'tb_pagamento' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletb_pagamento.nome_alunoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property cartao() As String
            Get
                Try 
                    Return CType(Me(Me.tabletb_pagamento.cartaoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'cartao' na tabela 'tb_pagamento' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletb_pagamento.cartaoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property valor_total() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tabletb_pagamento.valor_totalColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'valor_total' na tabela 'tb_pagamento' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletb_pagamento.valor_totalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property valor_pago() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tabletb_pagamento.valor_pagoColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'valor_pago' na tabela 'tb_pagamento' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletb_pagamento.valor_pagoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property situacao() As String
            Get
                Try 
                    Return CType(Me(Me.tabletb_pagamento.situacaoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'situacao' na tabela 'tb_pagamento' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletb_pagamento.situacaoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Isnome_alunoNull() As Boolean
            Return Me.IsNull(Me.tabletb_pagamento.nome_alunoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setnome_alunoNull()
            Me(Me.tabletb_pagamento.nome_alunoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IscartaoNull() As Boolean
            Return Me.IsNull(Me.tabletb_pagamento.cartaoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetcartaoNull()
            Me(Me.tabletb_pagamento.cartaoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Isvalor_totalNull() As Boolean
            Return Me.IsNull(Me.tabletb_pagamento.valor_totalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setvalor_totalNull()
            Me(Me.tabletb_pagamento.valor_totalColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Isvalor_pagoNull() As Boolean
            Return Me.IsNull(Me.tabletb_pagamento.valor_pagoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setvalor_pagoNull()
            Me(Me.tabletb_pagamento.valor_pagoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IssituacaoNull() As Boolean
            Return Me.IsNull(Me.tabletb_pagamento.situacaoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetsituacaoNull()
            Me(Me.tabletb_pagamento.situacaoColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Class tb_agendaRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As tb_agendaRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New(ByVal row As tb_agendaRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Row() As tb_agendaRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Class tb_alunoRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As tb_alunoRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New(ByVal row As tb_alunoRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Row() As tb_alunoRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Class tb_aula_praticaRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As tb_aula_praticaRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New(ByVal row As tb_aula_praticaRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Row() As tb_aula_praticaRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Class tb_aula_teoricaRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As tb_aula_teoricaRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New(ByVal row As tb_aula_teoricaRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Row() As tb_aula_teoricaRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Class tb_carroRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As tb_carroRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New(ByVal row As tb_carroRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Row() As tb_carroRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Class tb_instrutorRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As tb_instrutorRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New(ByVal row As tb_instrutorRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Row() As tb_instrutorRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Class tb_pagamentoRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As tb_pagamentoRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New(ByVal row As tb_pagamentoRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Row() As tb_pagamentoRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class

Namespace autoescola_dbDataSetTableAdapters
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class tb_agendaTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.OleDb.OleDbDataAdapter
        
        Private _connection As Global.System.Data.OleDb.OleDbConnection
        
        Private _transaction As Global.System.Data.OleDb.OleDbTransaction
        
        Private _commandCollection() As Global.System.Data.OleDb.OleDbCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.OleDb.OleDbDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.OleDb.OleDbConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.OleDb.OleDbCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.OleDb.OleDbTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.OleDb.OleDbCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.OleDb.OleDbDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "tb_agenda"
            tableMapping.ColumnMappings.Add("cod_instrutor", "cod_instrutor")
            tableMapping.ColumnMappings.Add("carro", "carro")
            tableMapping.ColumnMappings.Add("aluno", "aluno")
            tableMapping.ColumnMappings.Add("data", "data")
            tableMapping.ColumnMappings.Add("horario_inicio", "horario_inicio")
            tableMapping.ColumnMappings.Add("horario_fim", "horario_fim")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.OleDb.OleDbCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM `tb_agenda` WHERE ((`cod_instrutor` = ?) AND ((? = 1 AND `carro` IS N"& _ 
                "ULL) OR (`carro` = ?)) AND ((? = 1 AND `aluno` IS NULL) OR (`aluno` = ?)) AND (("& _ 
                "? = 1 AND `data` IS NULL) OR (`data` = ?)) AND ((? = 1 AND `horario_inicio` IS N"& _ 
                "ULL) OR (`horario_inicio` = ?)) AND ((? = 1 AND `horario_fim` IS NULL) OR (`hora"& _ 
                "rio_fim` = ?)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_cod_instrutor", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "cod_instrutor", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_carro", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "carro", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_carro", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "carro", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_aluno", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "aluno", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_aluno", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "aluno", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_data", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "data", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_data", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "data", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_horario_inicio", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "horario_inicio", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_horario_inicio", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "horario_inicio", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_horario_fim", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "horario_fim", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_horario_fim", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "horario_fim", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.InsertCommand = New Global.System.Data.OleDb.OleDbCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO `tb_agenda` (`cod_instrutor`, `carro`, `aluno`, `data`, `horario_inic"& _ 
                "io`, `horario_fim`) VALUES (?, ?, ?, ?, ?, ?)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("cod_instrutor", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "cod_instrutor", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("carro", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "carro", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("aluno", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "aluno", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("data", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "data", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("horario_inicio", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "horario_inicio", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("horario_fim", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "horario_fim", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand = New Global.System.Data.OleDb.OleDbCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE `tb_agenda` SET `cod_instrutor` = ?, `carro` = ?, `aluno` = ?, `data` = ?,"& _ 
                " `horario_inicio` = ?, `horario_fim` = ? WHERE ((`cod_instrutor` = ?) AND ((? = "& _ 
                "1 AND `carro` IS NULL) OR (`carro` = ?)) AND ((? = 1 AND `aluno` IS NULL) OR (`a"& _ 
                "luno` = ?)) AND ((? = 1 AND `data` IS NULL) OR (`data` = ?)) AND ((? = 1 AND `ho"& _ 
                "rario_inicio` IS NULL) OR (`horario_inicio` = ?)) AND ((? = 1 AND `horario_fim` "& _ 
                "IS NULL) OR (`horario_fim` = ?)))"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("cod_instrutor", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "cod_instrutor", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("carro", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "carro", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("aluno", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "aluno", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("data", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "data", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("horario_inicio", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "horario_inicio", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("horario_fim", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "horario_fim", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_cod_instrutor", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "cod_instrutor", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_carro", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "carro", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_carro", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "carro", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_aluno", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "aluno", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_aluno", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "aluno", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_data", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "data", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_data", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "data", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_horario_inicio", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "horario_inicio", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_horario_inicio", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "horario_inicio", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_horario_fim", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "horario_fim", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_horario_fim", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "horario_fim", Global.System.Data.DataRowVersion.Original, false, Nothing))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.OleDb.OleDbConnection()
            Me._connection.ConnectionString = Global.AutoEscola.My.MySettings.Default.autoescola_dbConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.OleDb.OleDbCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT cod_instrutor, carro, aluno, data, horario_inicio, horario_fim FROM tb_age"& _ 
                "nda"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As autoescola_dbDataSet.tb_agendaDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As autoescola_dbDataSet.tb_agendaDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As autoescola_dbDataSet.tb_agendaDataTable = New autoescola_dbDataSet.tb_agendaDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As autoescola_dbDataSet.tb_agendaDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As autoescola_dbDataSet) As Integer
            Return Me.Adapter.Update(dataSet, "tb_agenda")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_cod_instrutor As String, ByVal Original_carro As String, ByVal Original_aluno As String, ByVal Original_data As Global.System.Nullable(Of Date), ByVal Original_horario_inicio As Global.System.Nullable(Of Date), ByVal Original_horario_fim As Global.System.Nullable(Of Date)) As Integer
            If (Original_cod_instrutor Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_cod_instrutor")
            Else
                Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_cod_instrutor,String)
            End If
            If (Original_carro Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_carro,String)
            End If
            If (Original_aluno Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_aluno,String)
            End If
            If (Original_data.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_data.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (Original_horario_inicio.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_horario_inicio.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (Original_horario_fim.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(Original_horario_fim.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal cod_instrutor As String, ByVal carro As String, ByVal aluno As String, ByVal data As Global.System.Nullable(Of Date), ByVal horario_inicio As Global.System.Nullable(Of Date), ByVal horario_fim As Global.System.Nullable(Of Date)) As Integer
            If (cod_instrutor Is Nothing) Then
                Throw New Global.System.ArgumentNullException("cod_instrutor")
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(cod_instrutor,String)
            End If
            If (carro Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(carro,String)
            End If
            If (aluno Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(aluno,String)
            End If
            If (data.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(data.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (horario_inicio.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(horario_inicio.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (horario_fim.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(horario_fim.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal cod_instrutor As String, ByVal carro As String, ByVal aluno As String, ByVal data As Global.System.Nullable(Of Date), ByVal horario_inicio As Global.System.Nullable(Of Date), ByVal horario_fim As Global.System.Nullable(Of Date), ByVal Original_cod_instrutor As String, ByVal Original_carro As String, ByVal Original_aluno As String, ByVal Original_data As Global.System.Nullable(Of Date), ByVal Original_horario_inicio As Global.System.Nullable(Of Date), ByVal Original_horario_fim As Global.System.Nullable(Of Date)) As Integer
            If (cod_instrutor Is Nothing) Then
                Throw New Global.System.ArgumentNullException("cod_instrutor")
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(cod_instrutor,String)
            End If
            If (carro Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(carro,String)
            End If
            If (aluno Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(aluno,String)
            End If
            If (data.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(data.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (horario_inicio.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(horario_inicio.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (horario_fim.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(horario_fim.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (Original_cod_instrutor Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_cod_instrutor")
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(Original_cod_instrutor,String)
            End If
            If (Original_carro Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(Original_carro,String)
            End If
            If (Original_aluno Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(Original_aluno,String)
            End If
            If (Original_data.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(Original_data.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (Original_horario_inicio.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(Original_horario_inicio.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (Original_horario_fim.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(Original_horario_fim.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal carro As String, ByVal aluno As String, ByVal data As Global.System.Nullable(Of Date), ByVal horario_inicio As Global.System.Nullable(Of Date), ByVal horario_fim As Global.System.Nullable(Of Date), ByVal Original_cod_instrutor As String, ByVal Original_carro As String, ByVal Original_aluno As String, ByVal Original_data As Global.System.Nullable(Of Date), ByVal Original_horario_inicio As Global.System.Nullable(Of Date), ByVal Original_horario_fim As Global.System.Nullable(Of Date)) As Integer
            Return Me.Update(Original_cod_instrutor, carro, aluno, data, horario_inicio, horario_fim, Original_cod_instrutor, Original_carro, Original_aluno, Original_data, Original_horario_inicio, Original_horario_fim)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class tb_alunoTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.OleDb.OleDbDataAdapter
        
        Private _connection As Global.System.Data.OleDb.OleDbConnection
        
        Private _transaction As Global.System.Data.OleDb.OleDbTransaction
        
        Private _commandCollection() As Global.System.Data.OleDb.OleDbCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.OleDb.OleDbDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.OleDb.OleDbConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.OleDb.OleDbCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.OleDb.OleDbTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.OleDb.OleDbCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.OleDb.OleDbDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "tb_aluno"
            tableMapping.ColumnMappings.Add("cpf_aluno", "cpf_aluno")
            tableMapping.ColumnMappings.Add("nome_aluno", "nome_aluno")
            tableMapping.ColumnMappings.Add("data_nasc_aluno", "data_nasc_aluno")
            tableMapping.ColumnMappings.Add("rg_aluno", "rg_aluno")
            tableMapping.ColumnMappings.Add("cep_aluno", "cep_aluno")
            tableMapping.ColumnMappings.Add("endereco_aluno", "endereco_aluno")
            tableMapping.ColumnMappings.Add("comp_aluno", "comp_aluno")
            tableMapping.ColumnMappings.Add("bairro_aluno", "bairro_aluno")
            tableMapping.ColumnMappings.Add("cidade_aluno", "cidade_aluno")
            tableMapping.ColumnMappings.Add("uf_aluno", "uf_aluno")
            tableMapping.ColumnMappings.Add("img_aluno", "img_aluno")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.OleDb.OleDbCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM `tb_aluno` WHERE ((`cpf_aluno` = ?) AND ((? = 1 AND `nome_aluno` IS N"& _ 
                "ULL) OR (`nome_aluno` = ?)) AND ((? = 1 AND `data_nasc_aluno` IS NULL) OR (`data"& _ 
                "_nasc_aluno` = ?)) AND ((? = 1 AND `rg_aluno` IS NULL) OR (`rg_aluno` = ?)) AND "& _ 
                "((? = 1 AND `cep_aluno` IS NULL) OR (`cep_aluno` = ?)) AND ((? = 1 AND `endereco"& _ 
                "_aluno` IS NULL) OR (`endereco_aluno` = ?)) AND ((? = 1 AND `comp_aluno` IS NULL"& _ 
                ") OR (`comp_aluno` = ?)) AND ((? = 1 AND `bairro_aluno` IS NULL) OR (`bairro_alu"& _ 
                "no` = ?)) AND ((? = 1 AND `cidade_aluno` IS NULL) OR (`cidade_aluno` = ?)) AND ("& _ 
                "(? = 1 AND `uf_aluno` IS NULL) OR (`uf_aluno` = ?)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_cpf_aluno", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "cpf_aluno", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_nome_aluno", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "nome_aluno", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_nome_aluno", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "nome_aluno", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_data_nasc_aluno", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "data_nasc_aluno", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_data_nasc_aluno", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "data_nasc_aluno", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_rg_aluno", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "rg_aluno", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_rg_aluno", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "rg_aluno", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_cep_aluno", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "cep_aluno", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_cep_aluno", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "cep_aluno", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_endereco_aluno", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "endereco_aluno", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_endereco_aluno", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "endereco_aluno", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_comp_aluno", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "comp_aluno", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_comp_aluno", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "comp_aluno", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_bairro_aluno", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "bairro_aluno", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_bairro_aluno", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "bairro_aluno", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_cidade_aluno", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "cidade_aluno", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_cidade_aluno", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "cidade_aluno", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_uf_aluno", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "uf_aluno", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_uf_aluno", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "uf_aluno", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.InsertCommand = New Global.System.Data.OleDb.OleDbCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO `tb_aluno` (`cpf_aluno`, `nome_aluno`, `data_nasc_aluno`, `rg_aluno`,"& _ 
                " `cep_aluno`, `endereco_aluno`, `comp_aluno`, `bairro_aluno`, `cidade_aluno`, `u"& _ 
                "f_aluno`, `img_aluno`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("cpf_aluno", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "cpf_aluno", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("nome_aluno", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "nome_aluno", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("data_nasc_aluno", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "data_nasc_aluno", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("rg_aluno", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "rg_aluno", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("cep_aluno", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "cep_aluno", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("endereco_aluno", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "endereco_aluno", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("comp_aluno", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "comp_aluno", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("bairro_aluno", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "bairro_aluno", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("cidade_aluno", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "cidade_aluno", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("uf_aluno", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "uf_aluno", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("img_aluno", Global.System.Data.OleDb.OleDbType.LongVarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "img_aluno", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand = New Global.System.Data.OleDb.OleDbCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE `tb_aluno` SET `cpf_aluno` = ?, `nome_aluno` = ?, `data_nasc_aluno` = ?, `"& _ 
                "rg_aluno` = ?, `cep_aluno` = ?, `endereco_aluno` = ?, `comp_aluno` = ?, `bairro_"& _ 
                "aluno` = ?, `cidade_aluno` = ?, `uf_aluno` = ?, `img_aluno` = ? WHERE ((`cpf_alu"& _ 
                "no` = ?) AND ((? = 1 AND `nome_aluno` IS NULL) OR (`nome_aluno` = ?)) AND ((? = "& _ 
                "1 AND `data_nasc_aluno` IS NULL) OR (`data_nasc_aluno` = ?)) AND ((? = 1 AND `rg"& _ 
                "_aluno` IS NULL) OR (`rg_aluno` = ?)) AND ((? = 1 AND `cep_aluno` IS NULL) OR (`"& _ 
                "cep_aluno` = ?)) AND ((? = 1 AND `endereco_aluno` IS NULL) OR (`endereco_aluno` "& _ 
                "= ?)) AND ((? = 1 AND `comp_aluno` IS NULL) OR (`comp_aluno` = ?)) AND ((? = 1 A"& _ 
                "ND `bairro_aluno` IS NULL) OR (`bairro_aluno` = ?)) AND ((? = 1 AND `cidade_alun"& _ 
                "o` IS NULL) OR (`cidade_aluno` = ?)) AND ((? = 1 AND `uf_aluno` IS NULL) OR (`uf"& _ 
                "_aluno` = ?)))"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("cpf_aluno", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "cpf_aluno", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("nome_aluno", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "nome_aluno", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("data_nasc_aluno", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "data_nasc_aluno", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("rg_aluno", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "rg_aluno", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("cep_aluno", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "cep_aluno", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("endereco_aluno", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "endereco_aluno", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("comp_aluno", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "comp_aluno", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("bairro_aluno", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "bairro_aluno", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("cidade_aluno", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "cidade_aluno", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("uf_aluno", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "uf_aluno", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("img_aluno", Global.System.Data.OleDb.OleDbType.LongVarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "img_aluno", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_cpf_aluno", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "cpf_aluno", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_nome_aluno", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "nome_aluno", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_nome_aluno", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "nome_aluno", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_data_nasc_aluno", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "data_nasc_aluno", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_data_nasc_aluno", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "data_nasc_aluno", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_rg_aluno", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "rg_aluno", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_rg_aluno", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "rg_aluno", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_cep_aluno", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "cep_aluno", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_cep_aluno", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "cep_aluno", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_endereco_aluno", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "endereco_aluno", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_endereco_aluno", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "endereco_aluno", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_comp_aluno", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "comp_aluno", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_comp_aluno", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "comp_aluno", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_bairro_aluno", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "bairro_aluno", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_bairro_aluno", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "bairro_aluno", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_cidade_aluno", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "cidade_aluno", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_cidade_aluno", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "cidade_aluno", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_uf_aluno", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "uf_aluno", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_uf_aluno", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "uf_aluno", Global.System.Data.DataRowVersion.Original, false, Nothing))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.OleDb.OleDbConnection()
            Me._connection.ConnectionString = Global.AutoEscola.My.MySettings.Default.autoescola_dbConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.OleDb.OleDbCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT cpf_aluno, nome_aluno, data_nasc_aluno, rg_aluno, cep_aluno, endereco_alun"& _ 
                "o, comp_aluno, bairro_aluno, cidade_aluno, uf_aluno, img_aluno FROM tb_aluno"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As autoescola_dbDataSet.tb_alunoDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As autoescola_dbDataSet.tb_alunoDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As autoescola_dbDataSet.tb_alunoDataTable = New autoescola_dbDataSet.tb_alunoDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As autoescola_dbDataSet.tb_alunoDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As autoescola_dbDataSet) As Integer
            Return Me.Adapter.Update(dataSet, "tb_aluno")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_cpf_aluno As String, ByVal Original_nome_aluno As String, ByVal Original_data_nasc_aluno As Global.System.Nullable(Of Date), ByVal Original_rg_aluno As String, ByVal Original_cep_aluno As String, ByVal Original_endereco_aluno As String, ByVal Original_comp_aluno As String, ByVal Original_bairro_aluno As String, ByVal Original_cidade_aluno As String, ByVal Original_uf_aluno As String) As Integer
            If (Original_cpf_aluno Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_cpf_aluno")
            Else
                Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_cpf_aluno,String)
            End If
            If (Original_nome_aluno Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_nome_aluno,String)
            End If
            If (Original_data_nasc_aluno.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_data_nasc_aluno.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (Original_rg_aluno Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_rg_aluno,String)
            End If
            If (Original_cep_aluno Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_cep_aluno,String)
            End If
            If (Original_endereco_aluno Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(Original_endereco_aluno,String)
            End If
            If (Original_comp_aluno Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(Original_comp_aluno,String)
            End If
            If (Original_bairro_aluno Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(Original_bairro_aluno,String)
            End If
            If (Original_cidade_aluno Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(16).Value = CType(Original_cidade_aluno,String)
            End If
            If (Original_uf_aluno Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(18).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(18).Value = CType(Original_uf_aluno,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal cpf_aluno As String, ByVal nome_aluno As String, ByVal data_nasc_aluno As Global.System.Nullable(Of Date), ByVal rg_aluno As String, ByVal cep_aluno As String, ByVal endereco_aluno As String, ByVal comp_aluno As String, ByVal bairro_aluno As String, ByVal cidade_aluno As String, ByVal uf_aluno As String, ByVal img_aluno As String) As Integer
            If (cpf_aluno Is Nothing) Then
                Throw New Global.System.ArgumentNullException("cpf_aluno")
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(cpf_aluno,String)
            End If
            If (nome_aluno Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(nome_aluno,String)
            End If
            If (data_nasc_aluno.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(data_nasc_aluno.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (rg_aluno Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(rg_aluno,String)
            End If
            If (cep_aluno Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(cep_aluno,String)
            End If
            If (endereco_aluno Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(endereco_aluno,String)
            End If
            If (comp_aluno Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(comp_aluno,String)
            End If
            If (bairro_aluno Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(bairro_aluno,String)
            End If
            If (cidade_aluno Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(cidade_aluno,String)
            End If
            If (uf_aluno Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(uf_aluno,String)
            End If
            If (img_aluno Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(img_aluno,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal cpf_aluno As String,  _
                    ByVal nome_aluno As String,  _
                    ByVal data_nasc_aluno As Global.System.Nullable(Of Date),  _
                    ByVal rg_aluno As String,  _
                    ByVal cep_aluno As String,  _
                    ByVal endereco_aluno As String,  _
                    ByVal comp_aluno As String,  _
                    ByVal bairro_aluno As String,  _
                    ByVal cidade_aluno As String,  _
                    ByVal uf_aluno As String,  _
                    ByVal img_aluno As String,  _
                    ByVal Original_cpf_aluno As String,  _
                    ByVal Original_nome_aluno As String,  _
                    ByVal Original_data_nasc_aluno As Global.System.Nullable(Of Date),  _
                    ByVal Original_rg_aluno As String,  _
                    ByVal Original_cep_aluno As String,  _
                    ByVal Original_endereco_aluno As String,  _
                    ByVal Original_comp_aluno As String,  _
                    ByVal Original_bairro_aluno As String,  _
                    ByVal Original_cidade_aluno As String,  _
                    ByVal Original_uf_aluno As String) As Integer
            If (cpf_aluno Is Nothing) Then
                Throw New Global.System.ArgumentNullException("cpf_aluno")
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(cpf_aluno,String)
            End If
            If (nome_aluno Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(nome_aluno,String)
            End If
            If (data_nasc_aluno.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(data_nasc_aluno.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (rg_aluno Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(rg_aluno,String)
            End If
            If (cep_aluno Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(cep_aluno,String)
            End If
            If (endereco_aluno Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(endereco_aluno,String)
            End If
            If (comp_aluno Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(comp_aluno,String)
            End If
            If (bairro_aluno Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(bairro_aluno,String)
            End If
            If (cidade_aluno Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(cidade_aluno,String)
            End If
            If (uf_aluno Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(uf_aluno,String)
            End If
            If (img_aluno Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(img_aluno,String)
            End If
            If (Original_cpf_aluno Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_cpf_aluno")
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(Original_cpf_aluno,String)
            End If
            If (Original_nome_aluno Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(Original_nome_aluno,String)
            End If
            If (Original_data_nasc_aluno.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(Original_data_nasc_aluno.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (Original_rg_aluno Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(17).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(Original_rg_aluno,String)
            End If
            If (Original_cep_aluno Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(19).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(Original_cep_aluno,String)
            End If
            If (Original_endereco_aluno Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(21).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(21).Value = CType(Original_endereco_aluno,String)
            End If
            If (Original_comp_aluno Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(23).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(23).Value = CType(Original_comp_aluno,String)
            End If
            If (Original_bairro_aluno Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(24).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(25).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(24).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(25).Value = CType(Original_bairro_aluno,String)
            End If
            If (Original_cidade_aluno Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(26).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(27).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(26).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(27).Value = CType(Original_cidade_aluno,String)
            End If
            If (Original_uf_aluno Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(28).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(29).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(28).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(29).Value = CType(Original_uf_aluno,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal nome_aluno As String,  _
                    ByVal data_nasc_aluno As Global.System.Nullable(Of Date),  _
                    ByVal rg_aluno As String,  _
                    ByVal cep_aluno As String,  _
                    ByVal endereco_aluno As String,  _
                    ByVal comp_aluno As String,  _
                    ByVal bairro_aluno As String,  _
                    ByVal cidade_aluno As String,  _
                    ByVal uf_aluno As String,  _
                    ByVal img_aluno As String,  _
                    ByVal Original_cpf_aluno As String,  _
                    ByVal Original_nome_aluno As String,  _
                    ByVal Original_data_nasc_aluno As Global.System.Nullable(Of Date),  _
                    ByVal Original_rg_aluno As String,  _
                    ByVal Original_cep_aluno As String,  _
                    ByVal Original_endereco_aluno As String,  _
                    ByVal Original_comp_aluno As String,  _
                    ByVal Original_bairro_aluno As String,  _
                    ByVal Original_cidade_aluno As String,  _
                    ByVal Original_uf_aluno As String) As Integer
            Return Me.Update(Original_cpf_aluno, nome_aluno, data_nasc_aluno, rg_aluno, cep_aluno, endereco_aluno, comp_aluno, bairro_aluno, cidade_aluno, uf_aluno, img_aluno, Original_cpf_aluno, Original_nome_aluno, Original_data_nasc_aluno, Original_rg_aluno, Original_cep_aluno, Original_endereco_aluno, Original_comp_aluno, Original_bairro_aluno, Original_cidade_aluno, Original_uf_aluno)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class tb_aula_praticaTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.OleDb.OleDbDataAdapter
        
        Private _connection As Global.System.Data.OleDb.OleDbConnection
        
        Private _transaction As Global.System.Data.OleDb.OleDbTransaction
        
        Private _commandCollection() As Global.System.Data.OleDb.OleDbCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.OleDb.OleDbDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.OleDb.OleDbConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.OleDb.OleDbCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.OleDb.OleDbTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.OleDb.OleDbCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.OleDb.OleDbDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "tb_aula_pratica"
            tableMapping.ColumnMappings.Add("cod_instrutor", "cod_instrutor")
            tableMapping.ColumnMappings.Add("aluno", "aluno")
            tableMapping.ColumnMappings.Add("carro", "carro")
            tableMapping.ColumnMappings.Add("data", "data")
            tableMapping.ColumnMappings.Add("horario_inicio", "horario_inicio")
            tableMapping.ColumnMappings.Add("horario_fim", "horario_fim")
            tableMapping.ColumnMappings.Add("presenca", "presenca")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.OleDb.OleDbCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM `tb_aula_pratica` WHERE ((`cod_instrutor` = ?) AND ((? = 1 AND `aluno"& _ 
                "` IS NULL) OR (`aluno` = ?)) AND ((? = 1 AND `carro` IS NULL) OR (`carro` = ?)) "& _ 
                "AND ((? = 1 AND `data` IS NULL) OR (`data` = ?)) AND ((? = 1 AND `horario_inicio"& _ 
                "` IS NULL) OR (`horario_inicio` = ?)) AND ((? = 1 AND `horario_fim` IS NULL) OR "& _ 
                "(`horario_fim` = ?)) AND ((? = 1 AND `presenca` IS NULL) OR (`presenca` = ?)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_cod_instrutor", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "cod_instrutor", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_aluno", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "aluno", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_aluno", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "aluno", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_carro", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "carro", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_carro", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "carro", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_data", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "data", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_data", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "data", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_horario_inicio", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "horario_inicio", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_horario_inicio", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "horario_inicio", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_horario_fim", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "horario_fim", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_horario_fim", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "horario_fim", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_presenca", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "presenca", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_presenca", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "presenca", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.InsertCommand = New Global.System.Data.OleDb.OleDbCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO `tb_aula_pratica` (`cod_instrutor`, `aluno`, `carro`, `data`, `horari"& _ 
                "o_inicio`, `horario_fim`, `presenca`) VALUES (?, ?, ?, ?, ?, ?, ?)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("cod_instrutor", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "cod_instrutor", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("aluno", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "aluno", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("carro", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "carro", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("data", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "data", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("horario_inicio", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "horario_inicio", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("horario_fim", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "horario_fim", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("presenca", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "presenca", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand = New Global.System.Data.OleDb.OleDbCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE `tb_aula_pratica` SET `cod_instrutor` = ?, `aluno` = ?, `carro` = ?, `data"& _ 
                "` = ?, `horario_inicio` = ?, `horario_fim` = ?, `presenca` = ? WHERE ((`cod_inst"& _ 
                "rutor` = ?) AND ((? = 1 AND `aluno` IS NULL) OR (`aluno` = ?)) AND ((? = 1 AND `"& _ 
                "carro` IS NULL) OR (`carro` = ?)) AND ((? = 1 AND `data` IS NULL) OR (`data` = ?"& _ 
                ")) AND ((? = 1 AND `horario_inicio` IS NULL) OR (`horario_inicio` = ?)) AND ((? "& _ 
                "= 1 AND `horario_fim` IS NULL) OR (`horario_fim` = ?)) AND ((? = 1 AND `presenca"& _ 
                "` IS NULL) OR (`presenca` = ?)))"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("cod_instrutor", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "cod_instrutor", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("aluno", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "aluno", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("carro", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "carro", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("data", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "data", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("horario_inicio", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "horario_inicio", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("horario_fim", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "horario_fim", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("presenca", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "presenca", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_cod_instrutor", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "cod_instrutor", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_aluno", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "aluno", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_aluno", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "aluno", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_carro", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "carro", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_carro", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "carro", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_data", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "data", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_data", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "data", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_horario_inicio", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "horario_inicio", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_horario_inicio", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "horario_inicio", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_horario_fim", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "horario_fim", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_horario_fim", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "horario_fim", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_presenca", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "presenca", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_presenca", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "presenca", Global.System.Data.DataRowVersion.Original, false, Nothing))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.OleDb.OleDbConnection()
            Me._connection.ConnectionString = Global.AutoEscola.My.MySettings.Default.autoescola_dbConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.OleDb.OleDbCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT cod_instrutor, aluno, carro, data, horario_inicio, horario_fim, presenca F"& _ 
                "ROM tb_aula_pratica"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As autoescola_dbDataSet.tb_aula_praticaDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As autoescola_dbDataSet.tb_aula_praticaDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As autoescola_dbDataSet.tb_aula_praticaDataTable = New autoescola_dbDataSet.tb_aula_praticaDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As autoescola_dbDataSet.tb_aula_praticaDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As autoescola_dbDataSet) As Integer
            Return Me.Adapter.Update(dataSet, "tb_aula_pratica")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_cod_instrutor As Integer, ByVal Original_aluno As String, ByVal Original_carro As String, ByVal Original_data As Global.System.Nullable(Of Date), ByVal Original_horario_inicio As Global.System.Nullable(Of Date), ByVal Original_horario_fim As Global.System.Nullable(Of Date), ByVal Original_presenca As Boolean) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_cod_instrutor,Integer)
            If (Original_aluno Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_aluno,String)
            End If
            If (Original_carro Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_carro,String)
            End If
            If (Original_data.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_data.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (Original_horario_inicio.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_horario_inicio.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (Original_horario_fim.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(Original_horario_fim.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.DeleteCommand.Parameters(11).Value = CType(0,Object)
            Me.Adapter.DeleteCommand.Parameters(12).Value = CType(Original_presenca,Boolean)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal cod_instrutor As Integer, ByVal aluno As String, ByVal carro As String, ByVal data As Global.System.Nullable(Of Date), ByVal horario_inicio As Global.System.Nullable(Of Date), ByVal horario_fim As Global.System.Nullable(Of Date), ByVal presenca As Boolean) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(cod_instrutor,Integer)
            If (aluno Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(aluno,String)
            End If
            If (carro Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(carro,String)
            End If
            If (data.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(data.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (horario_inicio.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(horario_inicio.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (horario_fim.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(horario_fim.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.InsertCommand.Parameters(6).Value = CType(presenca,Boolean)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal cod_instrutor As Integer, ByVal aluno As String, ByVal carro As String, ByVal data As Global.System.Nullable(Of Date), ByVal horario_inicio As Global.System.Nullable(Of Date), ByVal horario_fim As Global.System.Nullable(Of Date), ByVal presenca As Boolean, ByVal Original_cod_instrutor As Integer, ByVal Original_aluno As String, ByVal Original_carro As String, ByVal Original_data As Global.System.Nullable(Of Date), ByVal Original_horario_inicio As Global.System.Nullable(Of Date), ByVal Original_horario_fim As Global.System.Nullable(Of Date), ByVal Original_presenca As Boolean) As Integer
            Me.Adapter.UpdateCommand.Parameters(0).Value = CType(cod_instrutor,Integer)
            If (aluno Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(aluno,String)
            End If
            If (carro Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(carro,String)
            End If
            If (data.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(data.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (horario_inicio.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(horario_inicio.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (horario_fim.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(horario_fim.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(6).Value = CType(presenca,Boolean)
            Me.Adapter.UpdateCommand.Parameters(7).Value = CType(Original_cod_instrutor,Integer)
            If (Original_aluno Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(Original_aluno,String)
            End If
            If (Original_carro Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(Original_carro,String)
            End If
            If (Original_data.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(Original_data.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (Original_horario_inicio.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(Original_horario_inicio.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (Original_horario_fim.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(Original_horario_fim.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(17).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(18).Value = CType(0,Object)
            Me.Adapter.UpdateCommand.Parameters(19).Value = CType(Original_presenca,Boolean)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal aluno As String, ByVal carro As String, ByVal data As Global.System.Nullable(Of Date), ByVal horario_inicio As Global.System.Nullable(Of Date), ByVal horario_fim As Global.System.Nullable(Of Date), ByVal presenca As Boolean, ByVal Original_cod_instrutor As Integer, ByVal Original_aluno As String, ByVal Original_carro As String, ByVal Original_data As Global.System.Nullable(Of Date), ByVal Original_horario_inicio As Global.System.Nullable(Of Date), ByVal Original_horario_fim As Global.System.Nullable(Of Date), ByVal Original_presenca As Boolean) As Integer
            Return Me.Update(Original_cod_instrutor, aluno, carro, data, horario_inicio, horario_fim, presenca, Original_cod_instrutor, Original_aluno, Original_carro, Original_data, Original_horario_inicio, Original_horario_fim, Original_presenca)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class tb_aula_teoricaTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.OleDb.OleDbDataAdapter
        
        Private _connection As Global.System.Data.OleDb.OleDbConnection
        
        Private _transaction As Global.System.Data.OleDb.OleDbTransaction
        
        Private _commandCollection() As Global.System.Data.OleDb.OleDbCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.OleDb.OleDbDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.OleDb.OleDbConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.OleDb.OleDbCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.OleDb.OleDbTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.OleDb.OleDbCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.OleDb.OleDbDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "tb_aula_teorica"
            tableMapping.ColumnMappings.Add("cod_instrutor", "cod_instrutor")
            tableMapping.ColumnMappings.Add("periodo", "periodo")
            tableMapping.ColumnMappings.Add("data_inicio", "data_inicio")
            tableMapping.ColumnMappings.Add("data_fim", "data_fim")
            tableMapping.ColumnMappings.Add("horario_inicio", "horario_inicio")
            tableMapping.ColumnMappings.Add("horario_fim", "horario_fim")
            tableMapping.ColumnMappings.Add("aluno", "aluno")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.OleDb.OleDbCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM `tb_aula_teorica` WHERE ((`cod_instrutor` = ?) AND ((? = 1 AND `perio"& _ 
                "do` IS NULL) OR (`periodo` = ?)) AND ((? = 1 AND `data_inicio` IS NULL) OR (`dat"& _ 
                "a_inicio` = ?)) AND ((? = 1 AND `data_fim` IS NULL) OR (`data_fim` = ?)) AND ((?"& _ 
                " = 1 AND `horario_inicio` IS NULL) OR (`horario_inicio` = ?)) AND ((? = 1 AND `h"& _ 
                "orario_fim` IS NULL) OR (`horario_fim` = ?)) AND ((? = 1 AND `aluno` IS NULL) OR"& _ 
                " (`aluno` = ?)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_cod_instrutor", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "cod_instrutor", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_periodo", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "periodo", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_periodo", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "periodo", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_data_inicio", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "data_inicio", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_data_inicio", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "data_inicio", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_data_fim", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "data_fim", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_data_fim", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "data_fim", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_horario_inicio", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "horario_inicio", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_horario_inicio", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "horario_inicio", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_horario_fim", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "horario_fim", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_horario_fim", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "horario_fim", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_aluno", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "aluno", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_aluno", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "aluno", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.InsertCommand = New Global.System.Data.OleDb.OleDbCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO `tb_aula_teorica` (`periodo`, `data_inicio`, `data_fim`, `horario_ini"& _ 
                "cio`, `horario_fim`, `aluno`) VALUES (?, ?, ?, ?, ?, ?)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("periodo", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "periodo", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("data_inicio", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "data_inicio", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("data_fim", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "data_fim", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("horario_inicio", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "horario_inicio", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("horario_fim", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "horario_fim", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("aluno", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "aluno", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand = New Global.System.Data.OleDb.OleDbCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE `tb_aula_teorica` SET `periodo` = ?, `data_inicio` = ?, `data_fim` = ?, `h"& _ 
                "orario_inicio` = ?, `horario_fim` = ?, `aluno` = ? WHERE ((`cod_instrutor` = ?) "& _ 
                "AND ((? = 1 AND `periodo` IS NULL) OR (`periodo` = ?)) AND ((? = 1 AND `data_ini"& _ 
                "cio` IS NULL) OR (`data_inicio` = ?)) AND ((? = 1 AND `data_fim` IS NULL) OR (`d"& _ 
                "ata_fim` = ?)) AND ((? = 1 AND `horario_inicio` IS NULL) OR (`horario_inicio` = "& _ 
                "?)) AND ((? = 1 AND `horario_fim` IS NULL) OR (`horario_fim` = ?)) AND ((? = 1 A"& _ 
                "ND `aluno` IS NULL) OR (`aluno` = ?)))"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("periodo", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "periodo", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("data_inicio", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "data_inicio", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("data_fim", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "data_fim", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("horario_inicio", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "horario_inicio", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("horario_fim", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "horario_fim", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("aluno", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "aluno", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_cod_instrutor", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "cod_instrutor", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_periodo", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "periodo", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_periodo", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "periodo", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_data_inicio", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "data_inicio", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_data_inicio", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "data_inicio", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_data_fim", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "data_fim", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_data_fim", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "data_fim", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_horario_inicio", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "horario_inicio", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_horario_inicio", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "horario_inicio", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_horario_fim", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "horario_fim", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_horario_fim", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "horario_fim", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_aluno", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "aluno", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_aluno", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "aluno", Global.System.Data.DataRowVersion.Original, false, Nothing))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.OleDb.OleDbConnection()
            Me._connection.ConnectionString = Global.AutoEscola.My.MySettings.Default.autoescola_dbConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.OleDb.OleDbCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT cod_instrutor, periodo, data_inicio, data_fim, horario_inicio, horario_fim"& _ 
                ", aluno FROM tb_aula_teorica"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As autoescola_dbDataSet.tb_aula_teoricaDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As autoescola_dbDataSet.tb_aula_teoricaDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As autoescola_dbDataSet.tb_aula_teoricaDataTable = New autoescola_dbDataSet.tb_aula_teoricaDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As autoescola_dbDataSet.tb_aula_teoricaDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As autoescola_dbDataSet) As Integer
            Return Me.Adapter.Update(dataSet, "tb_aula_teorica")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_cod_instrutor As Integer, ByVal Original_periodo As String, ByVal Original_data_inicio As Global.System.Nullable(Of Date), ByVal Original_data_fim As Global.System.Nullable(Of Date), ByVal Original_horario_inicio As Global.System.Nullable(Of Date), ByVal Original_horario_fim As Global.System.Nullable(Of Date), ByVal Original_aluno As String) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_cod_instrutor,Integer)
            If (Original_periodo Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_periodo,String)
            End If
            If (Original_data_inicio.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_data_inicio.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (Original_data_fim.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_data_fim.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (Original_horario_inicio.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_horario_inicio.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (Original_horario_fim.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(Original_horario_fim.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (Original_aluno Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(Original_aluno,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal periodo As String, ByVal data_inicio As Global.System.Nullable(Of Date), ByVal data_fim As Global.System.Nullable(Of Date), ByVal horario_inicio As Global.System.Nullable(Of Date), ByVal horario_fim As Global.System.Nullable(Of Date), ByVal aluno As String) As Integer
            If (periodo Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(periodo,String)
            End If
            If (data_inicio.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(data_inicio.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (data_fim.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(data_fim.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (horario_inicio.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(horario_inicio.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (horario_fim.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(horario_fim.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (aluno Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(aluno,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal periodo As String, ByVal data_inicio As Global.System.Nullable(Of Date), ByVal data_fim As Global.System.Nullable(Of Date), ByVal horario_inicio As Global.System.Nullable(Of Date), ByVal horario_fim As Global.System.Nullable(Of Date), ByVal aluno As String, ByVal Original_cod_instrutor As Integer, ByVal Original_periodo As String, ByVal Original_data_inicio As Global.System.Nullable(Of Date), ByVal Original_data_fim As Global.System.Nullable(Of Date), ByVal Original_horario_inicio As Global.System.Nullable(Of Date), ByVal Original_horario_fim As Global.System.Nullable(Of Date), ByVal Original_aluno As String) As Integer
            If (periodo Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(periodo,String)
            End If
            If (data_inicio.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(data_inicio.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (data_fim.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(data_fim.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (horario_inicio.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(horario_inicio.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (horario_fim.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(horario_fim.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (aluno Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(aluno,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(6).Value = CType(Original_cod_instrutor,Integer)
            If (Original_periodo Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(Original_periodo,String)
            End If
            If (Original_data_inicio.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(Original_data_inicio.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (Original_data_fim.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(Original_data_fim.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (Original_horario_inicio.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(Original_horario_inicio.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (Original_horario_fim.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(Original_horario_fim.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (Original_aluno Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(18).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(Original_aluno,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class tb_carroTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.OleDb.OleDbDataAdapter
        
        Private _connection As Global.System.Data.OleDb.OleDbConnection
        
        Private _transaction As Global.System.Data.OleDb.OleDbTransaction
        
        Private _commandCollection() As Global.System.Data.OleDb.OleDbCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.OleDb.OleDbDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.OleDb.OleDbConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.OleDb.OleDbCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.OleDb.OleDbTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.OleDb.OleDbCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.OleDb.OleDbDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "tb_carro"
            tableMapping.ColumnMappings.Add("placa", "placa")
            tableMapping.ColumnMappings.Add("modelo", "modelo")
            tableMapping.ColumnMappings.Add("marca", "marca")
            tableMapping.ColumnMappings.Add("ano", "ano")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.OleDb.OleDbCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM `tb_carro` WHERE ((`placa` = ?) AND ((? = 1 AND `modelo` IS NULL) OR "& _ 
                "(`modelo` = ?)) AND ((? = 1 AND `marca` IS NULL) OR (`marca` = ?)) AND ((? = 1 A"& _ 
                "ND `ano` IS NULL) OR (`ano` = ?)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_placa", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "placa", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_modelo", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "modelo", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_modelo", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "modelo", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_marca", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "marca", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_marca", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "marca", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_ano", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ano", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_ano", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ano", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.InsertCommand = New Global.System.Data.OleDb.OleDbCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO `tb_carro` (`placa`, `modelo`, `marca`, `ano`) VALUES (?, ?, ?, ?)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("placa", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "placa", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("modelo", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "modelo", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("marca", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "marca", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("ano", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ano", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand = New Global.System.Data.OleDb.OleDbCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE `tb_carro` SET `placa` = ?, `modelo` = ?, `marca` = ?, `ano` = ? WHERE ((`"& _ 
                "placa` = ?) AND ((? = 1 AND `modelo` IS NULL) OR (`modelo` = ?)) AND ((? = 1 AND"& _ 
                " `marca` IS NULL) OR (`marca` = ?)) AND ((? = 1 AND `ano` IS NULL) OR (`ano` = ?"& _ 
                ")))"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("placa", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "placa", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("modelo", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "modelo", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("marca", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "marca", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("ano", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ano", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_placa", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "placa", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_modelo", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "modelo", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_modelo", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "modelo", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_marca", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "marca", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_marca", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "marca", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_ano", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ano", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_ano", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ano", Global.System.Data.DataRowVersion.Original, false, Nothing))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.OleDb.OleDbConnection()
            Me._connection.ConnectionString = Global.AutoEscola.My.MySettings.Default.autoescola_dbConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.OleDb.OleDbCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT placa, modelo, marca, ano FROM tb_carro"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As autoescola_dbDataSet.tb_carroDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As autoescola_dbDataSet.tb_carroDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As autoescola_dbDataSet.tb_carroDataTable = New autoescola_dbDataSet.tb_carroDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As autoescola_dbDataSet.tb_carroDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As autoescola_dbDataSet) As Integer
            Return Me.Adapter.Update(dataSet, "tb_carro")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_placa As String, ByVal Original_modelo As String, ByVal Original_marca As String, ByVal Original_ano As String) As Integer
            If (Original_placa Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_placa")
            Else
                Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_placa,String)
            End If
            If (Original_modelo Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_modelo,String)
            End If
            If (Original_marca Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_marca,String)
            End If
            If (Original_ano Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_ano,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal placa As String, ByVal modelo As String, ByVal marca As String, ByVal ano As String) As Integer
            If (placa Is Nothing) Then
                Throw New Global.System.ArgumentNullException("placa")
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(placa,String)
            End If
            If (modelo Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(modelo,String)
            End If
            If (marca Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(marca,String)
            End If
            If (ano Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(ano,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal placa As String, ByVal modelo As String, ByVal marca As String, ByVal ano As String, ByVal Original_placa As String, ByVal Original_modelo As String, ByVal Original_marca As String, ByVal Original_ano As String) As Integer
            If (placa Is Nothing) Then
                Throw New Global.System.ArgumentNullException("placa")
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(placa,String)
            End If
            If (modelo Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(modelo,String)
            End If
            If (marca Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(marca,String)
            End If
            If (ano Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(ano,String)
            End If
            If (Original_placa Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_placa")
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(Original_placa,String)
            End If
            If (Original_modelo Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(Original_modelo,String)
            End If
            If (Original_marca Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(Original_marca,String)
            End If
            If (Original_ano Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(Original_ano,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal modelo As String, ByVal marca As String, ByVal ano As String, ByVal Original_placa As String, ByVal Original_modelo As String, ByVal Original_marca As String, ByVal Original_ano As String) As Integer
            Return Me.Update(Original_placa, modelo, marca, ano, Original_placa, Original_modelo, Original_marca, Original_ano)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class tb_instrutorTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.OleDb.OleDbDataAdapter
        
        Private _connection As Global.System.Data.OleDb.OleDbConnection
        
        Private _transaction As Global.System.Data.OleDb.OleDbTransaction
        
        Private _commandCollection() As Global.System.Data.OleDb.OleDbCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.OleDb.OleDbDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.OleDb.OleDbConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.OleDb.OleDbCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.OleDb.OleDbTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.OleDb.OleDbCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.OleDb.OleDbDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "tb_instrutor"
            tableMapping.ColumnMappings.Add("cpf_instrutor", "cpf_instrutor")
            tableMapping.ColumnMappings.Add("cod_instrutor", "cod_instrutor")
            tableMapping.ColumnMappings.Add("nome_instrutor", "nome_instrutor")
            tableMapping.ColumnMappings.Add("data_nasc_instrutor", "data_nasc_instrutor")
            tableMapping.ColumnMappings.Add("rg_instrutor", "rg_instrutor")
            tableMapping.ColumnMappings.Add("cep_instrutor", "cep_instrutor")
            tableMapping.ColumnMappings.Add("endereco_instrutor", "endereco_instrutor")
            tableMapping.ColumnMappings.Add("comp_instrutor", "comp_instrutor")
            tableMapping.ColumnMappings.Add("bairro_instrutor", "bairro_instrutor")
            tableMapping.ColumnMappings.Add("cidade_instrutor", "cidade_instrutor")
            tableMapping.ColumnMappings.Add("uf_instrutor", "uf_instrutor")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.OleDb.OleDbCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM `tb_instrutor` WHERE ((`cpf_instrutor` = ?) AND ((? = 1 AND `cod_inst"& _ 
                "rutor` IS NULL) OR (`cod_instrutor` = ?)) AND ((? = 1 AND `nome_instrutor` IS NU"& _ 
                "LL) OR (`nome_instrutor` = ?)) AND ((? = 1 AND `data_nasc_instrutor` IS NULL) OR"& _ 
                " (`data_nasc_instrutor` = ?)) AND ((? = 1 AND `rg_instrutor` IS NULL) OR (`rg_in"& _ 
                "strutor` = ?)) AND ((? = 1 AND `cep_instrutor` IS NULL) OR (`cep_instrutor` = ?)"& _ 
                ") AND ((? = 1 AND `endereco_instrutor` IS NULL) OR (`endereco_instrutor` = ?)) A"& _ 
                "ND ((? = 1 AND `comp_instrutor` IS NULL) OR (`comp_instrutor` = ?)) AND ((? = 1 "& _ 
                "AND `bairro_instrutor` IS NULL) OR (`bairro_instrutor` = ?)) AND ((? = 1 AND `ci"& _ 
                "dade_instrutor` IS NULL) OR (`cidade_instrutor` = ?)) AND ((? = 1 AND `uf_instru"& _ 
                "tor` IS NULL) OR (`uf_instrutor` = ?)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_cpf_instrutor", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "cpf_instrutor", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_cod_instrutor", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "cod_instrutor", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_cod_instrutor", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "cod_instrutor", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_nome_instrutor", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "nome_instrutor", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_nome_instrutor", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "nome_instrutor", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_data_nasc_instrutor", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "data_nasc_instrutor", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_data_nasc_instrutor", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "data_nasc_instrutor", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_rg_instrutor", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "rg_instrutor", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_rg_instrutor", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "rg_instrutor", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_cep_instrutor", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "cep_instrutor", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_cep_instrutor", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "cep_instrutor", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_endereco_instrutor", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "endereco_instrutor", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_endereco_instrutor", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "endereco_instrutor", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_comp_instrutor", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "comp_instrutor", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_comp_instrutor", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "comp_instrutor", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_bairro_instrutor", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "bairro_instrutor", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_bairro_instrutor", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "bairro_instrutor", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_cidade_instrutor", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "cidade_instrutor", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_cidade_instrutor", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "cidade_instrutor", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_uf_instrutor", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "uf_instrutor", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_uf_instrutor", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "uf_instrutor", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.InsertCommand = New Global.System.Data.OleDb.OleDbCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO `tb_instrutor` (`cpf_instrutor`, `cod_instrutor`, `nome_instrutor`, `"& _ 
                "data_nasc_instrutor`, `rg_instrutor`, `cep_instrutor`, `endereco_instrutor`, `co"& _ 
                "mp_instrutor`, `bairro_instrutor`, `cidade_instrutor`, `uf_instrutor`) VALUES (?"& _ 
                ", ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("cpf_instrutor", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "cpf_instrutor", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("cod_instrutor", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "cod_instrutor", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("nome_instrutor", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "nome_instrutor", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("data_nasc_instrutor", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "data_nasc_instrutor", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("rg_instrutor", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "rg_instrutor", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("cep_instrutor", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "cep_instrutor", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("endereco_instrutor", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "endereco_instrutor", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("comp_instrutor", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "comp_instrutor", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("bairro_instrutor", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "bairro_instrutor", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("cidade_instrutor", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "cidade_instrutor", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("uf_instrutor", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "uf_instrutor", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand = New Global.System.Data.OleDb.OleDbCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE `tb_instrutor` SET `cpf_instrutor` = ?, `cod_instrutor` = ?, `nome_instrut"& _ 
                "or` = ?, `data_nasc_instrutor` = ?, `rg_instrutor` = ?, `cep_instrutor` = ?, `en"& _ 
                "dereco_instrutor` = ?, `comp_instrutor` = ?, `bairro_instrutor` = ?, `cidade_ins"& _ 
                "trutor` = ?, `uf_instrutor` = ? WHERE ((`cpf_instrutor` = ?) AND ((? = 1 AND `co"& _ 
                "d_instrutor` IS NULL) OR (`cod_instrutor` = ?)) AND ((? = 1 AND `nome_instrutor`"& _ 
                " IS NULL) OR (`nome_instrutor` = ?)) AND ((? = 1 AND `data_nasc_instrutor` IS NU"& _ 
                "LL) OR (`data_nasc_instrutor` = ?)) AND ((? = 1 AND `rg_instrutor` IS NULL) OR ("& _ 
                "`rg_instrutor` = ?)) AND ((? = 1 AND `cep_instrutor` IS NULL) OR (`cep_instrutor"& _ 
                "` = ?)) AND ((? = 1 AND `endereco_instrutor` IS NULL) OR (`endereco_instrutor` ="& _ 
                " ?)) AND ((? = 1 AND `comp_instrutor` IS NULL) OR (`comp_instrutor` = ?)) AND (("& _ 
                "? = 1 AND `bairro_instrutor` IS NULL) OR (`bairro_instrutor` = ?)) AND ((? = 1 A"& _ 
                "ND `cidade_instrutor` IS NULL) OR (`cidade_instrutor` = ?)) AND ((? = 1 AND `uf_"& _ 
                "instrutor` IS NULL) OR (`uf_instrutor` = ?)))"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("cpf_instrutor", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "cpf_instrutor", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("cod_instrutor", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "cod_instrutor", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("nome_instrutor", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "nome_instrutor", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("data_nasc_instrutor", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "data_nasc_instrutor", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("rg_instrutor", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "rg_instrutor", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("cep_instrutor", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "cep_instrutor", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("endereco_instrutor", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "endereco_instrutor", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("comp_instrutor", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "comp_instrutor", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("bairro_instrutor", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "bairro_instrutor", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("cidade_instrutor", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "cidade_instrutor", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("uf_instrutor", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "uf_instrutor", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_cpf_instrutor", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "cpf_instrutor", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_cod_instrutor", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "cod_instrutor", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_cod_instrutor", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "cod_instrutor", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_nome_instrutor", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "nome_instrutor", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_nome_instrutor", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "nome_instrutor", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_data_nasc_instrutor", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "data_nasc_instrutor", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_data_nasc_instrutor", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "data_nasc_instrutor", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_rg_instrutor", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "rg_instrutor", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_rg_instrutor", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "rg_instrutor", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_cep_instrutor", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "cep_instrutor", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_cep_instrutor", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "cep_instrutor", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_endereco_instrutor", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "endereco_instrutor", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_endereco_instrutor", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "endereco_instrutor", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_comp_instrutor", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "comp_instrutor", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_comp_instrutor", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "comp_instrutor", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_bairro_instrutor", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "bairro_instrutor", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_bairro_instrutor", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "bairro_instrutor", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_cidade_instrutor", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "cidade_instrutor", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_cidade_instrutor", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "cidade_instrutor", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_uf_instrutor", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "uf_instrutor", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_uf_instrutor", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "uf_instrutor", Global.System.Data.DataRowVersion.Original, false, Nothing))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.OleDb.OleDbConnection()
            Me._connection.ConnectionString = Global.AutoEscola.My.MySettings.Default.autoescola_dbConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.OleDb.OleDbCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT cpf_instrutor, cod_instrutor, nome_instrutor, data_nasc_instrutor, rg_inst"& _ 
                "rutor, cep_instrutor, endereco_instrutor, comp_instrutor, bairro_instrutor, cida"& _ 
                "de_instrutor, uf_instrutor FROM tb_instrutor"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As autoescola_dbDataSet.tb_instrutorDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As autoescola_dbDataSet.tb_instrutorDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As autoescola_dbDataSet.tb_instrutorDataTable = New autoescola_dbDataSet.tb_instrutorDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As autoescola_dbDataSet.tb_instrutorDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As autoescola_dbDataSet) As Integer
            Return Me.Adapter.Update(dataSet, "tb_instrutor")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_cpf_instrutor As String, ByVal Original_cod_instrutor As String, ByVal Original_nome_instrutor As String, ByVal Original_data_nasc_instrutor As Global.System.Nullable(Of Date), ByVal Original_rg_instrutor As String, ByVal Original_cep_instrutor As String, ByVal Original_endereco_instrutor As String, ByVal Original_comp_instrutor As String, ByVal Original_bairro_instrutor As String, ByVal Original_cidade_instrutor As String, ByVal Original_uf_instrutor As String) As Integer
            If (Original_cpf_instrutor Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_cpf_instrutor")
            Else
                Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_cpf_instrutor,String)
            End If
            If (Original_cod_instrutor Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_cod_instrutor,String)
            End If
            If (Original_nome_instrutor Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_nome_instrutor,String)
            End If
            If (Original_data_nasc_instrutor.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_data_nasc_instrutor.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (Original_rg_instrutor Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_rg_instrutor,String)
            End If
            If (Original_cep_instrutor Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(Original_cep_instrutor,String)
            End If
            If (Original_endereco_instrutor Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(Original_endereco_instrutor,String)
            End If
            If (Original_comp_instrutor Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(Original_comp_instrutor,String)
            End If
            If (Original_bairro_instrutor Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(16).Value = CType(Original_bairro_instrutor,String)
            End If
            If (Original_cidade_instrutor Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(18).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(18).Value = CType(Original_cidade_instrutor,String)
            End If
            If (Original_uf_instrutor Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(20).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(20).Value = CType(Original_uf_instrutor,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal cpf_instrutor As String, ByVal cod_instrutor As String, ByVal nome_instrutor As String, ByVal data_nasc_instrutor As Global.System.Nullable(Of Date), ByVal rg_instrutor As String, ByVal cep_instrutor As String, ByVal endereco_instrutor As String, ByVal comp_instrutor As String, ByVal bairro_instrutor As String, ByVal cidade_instrutor As String, ByVal uf_instrutor As String) As Integer
            If (cpf_instrutor Is Nothing) Then
                Throw New Global.System.ArgumentNullException("cpf_instrutor")
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(cpf_instrutor,String)
            End If
            If (cod_instrutor Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(cod_instrutor,String)
            End If
            If (nome_instrutor Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(nome_instrutor,String)
            End If
            If (data_nasc_instrutor.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(data_nasc_instrutor.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (rg_instrutor Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(rg_instrutor,String)
            End If
            If (cep_instrutor Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(cep_instrutor,String)
            End If
            If (endereco_instrutor Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(endereco_instrutor,String)
            End If
            If (comp_instrutor Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(comp_instrutor,String)
            End If
            If (bairro_instrutor Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(bairro_instrutor,String)
            End If
            If (cidade_instrutor Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(cidade_instrutor,String)
            End If
            If (uf_instrutor Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(uf_instrutor,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal cpf_instrutor As String,  _
                    ByVal cod_instrutor As String,  _
                    ByVal nome_instrutor As String,  _
                    ByVal data_nasc_instrutor As Global.System.Nullable(Of Date),  _
                    ByVal rg_instrutor As String,  _
                    ByVal cep_instrutor As String,  _
                    ByVal endereco_instrutor As String,  _
                    ByVal comp_instrutor As String,  _
                    ByVal bairro_instrutor As String,  _
                    ByVal cidade_instrutor As String,  _
                    ByVal uf_instrutor As String,  _
                    ByVal Original_cpf_instrutor As String,  _
                    ByVal Original_cod_instrutor As String,  _
                    ByVal Original_nome_instrutor As String,  _
                    ByVal Original_data_nasc_instrutor As Global.System.Nullable(Of Date),  _
                    ByVal Original_rg_instrutor As String,  _
                    ByVal Original_cep_instrutor As String,  _
                    ByVal Original_endereco_instrutor As String,  _
                    ByVal Original_comp_instrutor As String,  _
                    ByVal Original_bairro_instrutor As String,  _
                    ByVal Original_cidade_instrutor As String,  _
                    ByVal Original_uf_instrutor As String) As Integer
            If (cpf_instrutor Is Nothing) Then
                Throw New Global.System.ArgumentNullException("cpf_instrutor")
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(cpf_instrutor,String)
            End If
            If (cod_instrutor Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(cod_instrutor,String)
            End If
            If (nome_instrutor Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(nome_instrutor,String)
            End If
            If (data_nasc_instrutor.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(data_nasc_instrutor.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (rg_instrutor Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(rg_instrutor,String)
            End If
            If (cep_instrutor Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(cep_instrutor,String)
            End If
            If (endereco_instrutor Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(endereco_instrutor,String)
            End If
            If (comp_instrutor Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(comp_instrutor,String)
            End If
            If (bairro_instrutor Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(bairro_instrutor,String)
            End If
            If (cidade_instrutor Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(cidade_instrutor,String)
            End If
            If (uf_instrutor Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(uf_instrutor,String)
            End If
            If (Original_cpf_instrutor Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_cpf_instrutor")
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(Original_cpf_instrutor,String)
            End If
            If (Original_cod_instrutor Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(Original_cod_instrutor,String)
            End If
            If (Original_nome_instrutor Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(15).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(Original_nome_instrutor,String)
            End If
            If (Original_data_nasc_instrutor.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(Original_data_nasc_instrutor.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(17).Value = Global.System.DBNull.Value
            End If
            If (Original_rg_instrutor Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(19).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(Original_rg_instrutor,String)
            End If
            If (Original_cep_instrutor Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(21).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(21).Value = CType(Original_cep_instrutor,String)
            End If
            If (Original_endereco_instrutor Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(23).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(23).Value = CType(Original_endereco_instrutor,String)
            End If
            If (Original_comp_instrutor Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(24).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(25).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(24).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(25).Value = CType(Original_comp_instrutor,String)
            End If
            If (Original_bairro_instrutor Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(26).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(27).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(26).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(27).Value = CType(Original_bairro_instrutor,String)
            End If
            If (Original_cidade_instrutor Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(28).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(29).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(28).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(29).Value = CType(Original_cidade_instrutor,String)
            End If
            If (Original_uf_instrutor Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(30).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(31).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(30).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(31).Value = CType(Original_uf_instrutor,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal cod_instrutor As String,  _
                    ByVal nome_instrutor As String,  _
                    ByVal data_nasc_instrutor As Global.System.Nullable(Of Date),  _
                    ByVal rg_instrutor As String,  _
                    ByVal cep_instrutor As String,  _
                    ByVal endereco_instrutor As String,  _
                    ByVal comp_instrutor As String,  _
                    ByVal bairro_instrutor As String,  _
                    ByVal cidade_instrutor As String,  _
                    ByVal uf_instrutor As String,  _
                    ByVal Original_cpf_instrutor As String,  _
                    ByVal Original_cod_instrutor As String,  _
                    ByVal Original_nome_instrutor As String,  _
                    ByVal Original_data_nasc_instrutor As Global.System.Nullable(Of Date),  _
                    ByVal Original_rg_instrutor As String,  _
                    ByVal Original_cep_instrutor As String,  _
                    ByVal Original_endereco_instrutor As String,  _
                    ByVal Original_comp_instrutor As String,  _
                    ByVal Original_bairro_instrutor As String,  _
                    ByVal Original_cidade_instrutor As String,  _
                    ByVal Original_uf_instrutor As String) As Integer
            Return Me.Update(Original_cpf_instrutor, cod_instrutor, nome_instrutor, data_nasc_instrutor, rg_instrutor, cep_instrutor, endereco_instrutor, comp_instrutor, bairro_instrutor, cidade_instrutor, uf_instrutor, Original_cpf_instrutor, Original_cod_instrutor, Original_nome_instrutor, Original_data_nasc_instrutor, Original_rg_instrutor, Original_cep_instrutor, Original_endereco_instrutor, Original_comp_instrutor, Original_bairro_instrutor, Original_cidade_instrutor, Original_uf_instrutor)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class tb_pagamentoTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.OleDb.OleDbDataAdapter
        
        Private _connection As Global.System.Data.OleDb.OleDbConnection
        
        Private _transaction As Global.System.Data.OleDb.OleDbTransaction
        
        Private _commandCollection() As Global.System.Data.OleDb.OleDbCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.OleDb.OleDbDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.OleDb.OleDbConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.OleDb.OleDbCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.OleDb.OleDbTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.OleDb.OleDbCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.OleDb.OleDbDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "tb_pagamento"
            tableMapping.ColumnMappings.Add("cpf_aluno", "cpf_aluno")
            tableMapping.ColumnMappings.Add("nome_aluno", "nome_aluno")
            tableMapping.ColumnMappings.Add("cartao", "cartao")
            tableMapping.ColumnMappings.Add("valor_total", "valor_total")
            tableMapping.ColumnMappings.Add("valor_pago", "valor_pago")
            tableMapping.ColumnMappings.Add("situacao", "situacao")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.OleDb.OleDbCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM `tb_pagamento` WHERE ((`cpf_aluno` = ?) AND ((? = 1 AND `nome_aluno` "& _ 
                "IS NULL) OR (`nome_aluno` = ?)) AND ((? = 1 AND `cartao` IS NULL) OR (`cartao` ="& _ 
                " ?)) AND ((? = 1 AND `valor_total` IS NULL) OR (`valor_total` = ?)) AND ((? = 1 "& _ 
                "AND `valor_pago` IS NULL) OR (`valor_pago` = ?)) AND ((? = 1 AND `situacao` IS N"& _ 
                "ULL) OR (`situacao` = ?)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_cpf_aluno", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "cpf_aluno", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_nome_aluno", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "nome_aluno", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_nome_aluno", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "nome_aluno", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_cartao", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "cartao", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_cartao", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "cartao", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_valor_total", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "valor_total", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_valor_total", Global.System.Data.OleDb.OleDbType.Currency, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "valor_total", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_valor_pago", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "valor_pago", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_valor_pago", Global.System.Data.OleDb.OleDbType.Currency, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "valor_pago", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_situacao", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "situacao", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_situacao", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "situacao", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.InsertCommand = New Global.System.Data.OleDb.OleDbCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO `tb_pagamento` (`cpf_aluno`, `nome_aluno`, `cartao`, `valor_total`, `"& _ 
                "valor_pago`, `situacao`) VALUES (?, ?, ?, ?, ?, ?)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("cpf_aluno", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "cpf_aluno", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("nome_aluno", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "nome_aluno", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("cartao", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "cartao", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("valor_total", Global.System.Data.OleDb.OleDbType.Currency, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "valor_total", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("valor_pago", Global.System.Data.OleDb.OleDbType.Currency, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "valor_pago", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("situacao", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "situacao", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand = New Global.System.Data.OleDb.OleDbCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE `tb_pagamento` SET `cpf_aluno` = ?, `nome_aluno` = ?, `cartao` = ?, `valor"& _ 
                "_total` = ?, `valor_pago` = ?, `situacao` = ? WHERE ((`cpf_aluno` = ?) AND ((? ="& _ 
                " 1 AND `nome_aluno` IS NULL) OR (`nome_aluno` = ?)) AND ((? = 1 AND `cartao` IS "& _ 
                "NULL) OR (`cartao` = ?)) AND ((? = 1 AND `valor_total` IS NULL) OR (`valor_total"& _ 
                "` = ?)) AND ((? = 1 AND `valor_pago` IS NULL) OR (`valor_pago` = ?)) AND ((? = 1"& _ 
                " AND `situacao` IS NULL) OR (`situacao` = ?)))"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("cpf_aluno", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "cpf_aluno", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("nome_aluno", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "nome_aluno", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("cartao", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "cartao", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("valor_total", Global.System.Data.OleDb.OleDbType.Currency, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "valor_total", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("valor_pago", Global.System.Data.OleDb.OleDbType.Currency, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "valor_pago", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("situacao", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "situacao", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_cpf_aluno", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "cpf_aluno", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_nome_aluno", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "nome_aluno", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_nome_aluno", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "nome_aluno", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_cartao", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "cartao", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_cartao", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "cartao", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_valor_total", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "valor_total", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_valor_total", Global.System.Data.OleDb.OleDbType.Currency, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "valor_total", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_valor_pago", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "valor_pago", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_valor_pago", Global.System.Data.OleDb.OleDbType.Currency, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "valor_pago", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_situacao", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "situacao", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_situacao", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "situacao", Global.System.Data.DataRowVersion.Original, false, Nothing))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.OleDb.OleDbConnection()
            Me._connection.ConnectionString = Global.AutoEscola.My.MySettings.Default.autoescola_dbConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.OleDb.OleDbCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT cpf_aluno, nome_aluno, cartao, valor_total, valor_pago, situacao FROM tb_p"& _ 
                "agamento"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As autoescola_dbDataSet.tb_pagamentoDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As autoescola_dbDataSet.tb_pagamentoDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As autoescola_dbDataSet.tb_pagamentoDataTable = New autoescola_dbDataSet.tb_pagamentoDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As autoescola_dbDataSet.tb_pagamentoDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As autoescola_dbDataSet) As Integer
            Return Me.Adapter.Update(dataSet, "tb_pagamento")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_cpf_aluno As String, ByVal Original_nome_aluno As String, ByVal Original_cartao As String, ByVal Original_valor_total As Global.System.Nullable(Of Decimal), ByVal Original_valor_pago As Global.System.Nullable(Of Decimal), ByVal Original_situacao As String) As Integer
            If (Original_cpf_aluno Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_cpf_aluno")
            Else
                Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_cpf_aluno,String)
            End If
            If (Original_nome_aluno Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_nome_aluno,String)
            End If
            If (Original_cartao Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_cartao,String)
            End If
            If (Original_valor_total.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_valor_total.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (Original_valor_pago.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_valor_pago.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (Original_situacao Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(Original_situacao,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal cpf_aluno As String, ByVal nome_aluno As String, ByVal cartao As String, ByVal valor_total As Global.System.Nullable(Of Decimal), ByVal valor_pago As Global.System.Nullable(Of Decimal), ByVal situacao As String) As Integer
            If (cpf_aluno Is Nothing) Then
                Throw New Global.System.ArgumentNullException("cpf_aluno")
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(cpf_aluno,String)
            End If
            If (nome_aluno Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(nome_aluno,String)
            End If
            If (cartao Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(cartao,String)
            End If
            If (valor_total.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(valor_total.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (valor_pago.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(valor_pago.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (situacao Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(situacao,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal cpf_aluno As String, ByVal nome_aluno As String, ByVal cartao As String, ByVal valor_total As Global.System.Nullable(Of Decimal), ByVal valor_pago As Global.System.Nullable(Of Decimal), ByVal situacao As String, ByVal Original_cpf_aluno As String, ByVal Original_nome_aluno As String, ByVal Original_cartao As String, ByVal Original_valor_total As Global.System.Nullable(Of Decimal), ByVal Original_valor_pago As Global.System.Nullable(Of Decimal), ByVal Original_situacao As String) As Integer
            If (cpf_aluno Is Nothing) Then
                Throw New Global.System.ArgumentNullException("cpf_aluno")
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(cpf_aluno,String)
            End If
            If (nome_aluno Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(nome_aluno,String)
            End If
            If (cartao Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(cartao,String)
            End If
            If (valor_total.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(valor_total.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (valor_pago.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(valor_pago.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (situacao Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(situacao,String)
            End If
            If (Original_cpf_aluno Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_cpf_aluno")
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(Original_cpf_aluno,String)
            End If
            If (Original_nome_aluno Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(Original_nome_aluno,String)
            End If
            If (Original_cartao Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(Original_cartao,String)
            End If
            If (Original_valor_total.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(Original_valor_total.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (Original_valor_pago.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(Original_valor_pago.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (Original_situacao Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(Original_situacao,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal nome_aluno As String, ByVal cartao As String, ByVal valor_total As Global.System.Nullable(Of Decimal), ByVal valor_pago As Global.System.Nullable(Of Decimal), ByVal situacao As String, ByVal Original_cpf_aluno As String, ByVal Original_nome_aluno As String, ByVal Original_cartao As String, ByVal Original_valor_total As Global.System.Nullable(Of Decimal), ByVal Original_valor_pago As Global.System.Nullable(Of Decimal), ByVal Original_situacao As String) As Integer
            Return Me.Update(Original_cpf_aluno, nome_aluno, cartao, valor_total, valor_pago, situacao, Original_cpf_aluno, Original_nome_aluno, Original_cartao, Original_valor_total, Original_valor_pago, Original_situacao)
        End Function
    End Class
    
    '''<summary>
    '''TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD"& _ 
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")>  _
    Partial Public Class TableAdapterManager
        Inherits Global.System.ComponentModel.Component
        
        Private _updateOrder As UpdateOrderOption
        
        Private _tb_agendaTableAdapter As tb_agendaTableAdapter
        
        Private _tb_alunoTableAdapter As tb_alunoTableAdapter
        
        Private _tb_aula_praticaTableAdapter As tb_aula_praticaTableAdapter
        
        Private _tb_aula_teoricaTableAdapter As tb_aula_teoricaTableAdapter
        
        Private _tb_carroTableAdapter As tb_carroTableAdapter
        
        Private _tb_instrutorTableAdapter As tb_instrutorTableAdapter
        
        Private _tb_pagamentoTableAdapter As tb_pagamentoTableAdapter
        
        Private _backupDataSetBeforeUpdate As Boolean
        
        Private _connection As Global.System.Data.IDbConnection
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property UpdateOrder() As UpdateOrderOption
            Get
                Return Me._updateOrder
            End Get
            Set
                Me._updateOrder = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property tb_agendaTableAdapter() As tb_agendaTableAdapter
            Get
                Return Me._tb_agendaTableAdapter
            End Get
            Set
                Me._tb_agendaTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property tb_alunoTableAdapter() As tb_alunoTableAdapter
            Get
                Return Me._tb_alunoTableAdapter
            End Get
            Set
                Me._tb_alunoTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property tb_aula_praticaTableAdapter() As tb_aula_praticaTableAdapter
            Get
                Return Me._tb_aula_praticaTableAdapter
            End Get
            Set
                Me._tb_aula_praticaTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property tb_aula_teoricaTableAdapter() As tb_aula_teoricaTableAdapter
            Get
                Return Me._tb_aula_teoricaTableAdapter
            End Get
            Set
                Me._tb_aula_teoricaTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property tb_carroTableAdapter() As tb_carroTableAdapter
            Get
                Return Me._tb_carroTableAdapter
            End Get
            Set
                Me._tb_carroTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property tb_instrutorTableAdapter() As tb_instrutorTableAdapter
            Get
                Return Me._tb_instrutorTableAdapter
            End Get
            Set
                Me._tb_instrutorTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property tb_pagamentoTableAdapter() As tb_pagamentoTableAdapter
            Get
                Return Me._tb_pagamentoTableAdapter
            End Get
            Set
                Me._tb_pagamentoTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property BackupDataSetBeforeUpdate() As Boolean
            Get
                Return Me._backupDataSetBeforeUpdate
            End Get
            Set
                Me._backupDataSetBeforeUpdate = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public Property Connection() As Global.System.Data.IDbConnection
            Get
                If (Not (Me._connection) Is Nothing) Then
                    Return Me._connection
                End If
                If ((Not (Me._tb_agendaTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._tb_agendaTableAdapter.Connection) Is Nothing)) Then
                    Return Me._tb_agendaTableAdapter.Connection
                End If
                If ((Not (Me._tb_alunoTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._tb_alunoTableAdapter.Connection) Is Nothing)) Then
                    Return Me._tb_alunoTableAdapter.Connection
                End If
                If ((Not (Me._tb_aula_praticaTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._tb_aula_praticaTableAdapter.Connection) Is Nothing)) Then
                    Return Me._tb_aula_praticaTableAdapter.Connection
                End If
                If ((Not (Me._tb_aula_teoricaTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._tb_aula_teoricaTableAdapter.Connection) Is Nothing)) Then
                    Return Me._tb_aula_teoricaTableAdapter.Connection
                End If
                If ((Not (Me._tb_carroTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._tb_carroTableAdapter.Connection) Is Nothing)) Then
                    Return Me._tb_carroTableAdapter.Connection
                End If
                If ((Not (Me._tb_instrutorTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._tb_instrutorTableAdapter.Connection) Is Nothing)) Then
                    Return Me._tb_instrutorTableAdapter.Connection
                End If
                If ((Not (Me._tb_pagamentoTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._tb_pagamentoTableAdapter.Connection) Is Nothing)) Then
                    Return Me._tb_pagamentoTableAdapter.Connection
                End If
                Return Nothing
            End Get
            Set
                Me._connection = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property TableAdapterInstanceCount() As Integer
            Get
                Dim count As Integer = 0
                If (Not (Me._tb_agendaTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._tb_alunoTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._tb_aula_praticaTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._tb_aula_teoricaTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._tb_carroTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._tb_instrutorTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._tb_pagamentoTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                Return count
            End Get
        End Property
        
        '''<summary>
        '''Update rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Function UpdateUpdatedRows(ByVal dataSet As autoescola_dbDataSet, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow), ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._tb_alunoTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.tb_aluno.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._tb_alunoTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._tb_carroTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.tb_carro.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._tb_carroTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._tb_agendaTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.tb_agenda.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._tb_agendaTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._tb_aula_praticaTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.tb_aula_pratica.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._tb_aula_praticaTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._tb_aula_teoricaTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.tb_aula_teorica.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._tb_aula_teoricaTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._tb_instrutorTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.tb_instrutor.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._tb_instrutorTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._tb_pagamentoTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.tb_pagamento.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._tb_pagamentoTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Insert rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Function UpdateInsertedRows(ByVal dataSet As autoescola_dbDataSet, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._tb_alunoTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.tb_aluno.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._tb_alunoTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._tb_carroTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.tb_carro.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._tb_carroTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._tb_agendaTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.tb_agenda.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._tb_agendaTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._tb_aula_praticaTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.tb_aula_pratica.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._tb_aula_praticaTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._tb_aula_teoricaTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.tb_aula_teorica.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._tb_aula_teoricaTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._tb_instrutorTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.tb_instrutor.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._tb_instrutorTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._tb_pagamentoTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.tb_pagamento.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._tb_pagamentoTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Delete rows in bottom-up order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Function UpdateDeletedRows(ByVal dataSet As autoescola_dbDataSet, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._tb_pagamentoTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.tb_pagamento.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._tb_pagamentoTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._tb_instrutorTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.tb_instrutor.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._tb_instrutorTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._tb_aula_teoricaTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.tb_aula_teorica.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._tb_aula_teoricaTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._tb_aula_praticaTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.tb_aula_pratica.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._tb_aula_praticaTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._tb_agendaTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.tb_agenda.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._tb_agendaTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._tb_carroTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.tb_carro.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._tb_carroTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._tb_alunoTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.tb_aluno.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._tb_alunoTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Function GetRealUpdatedRows(ByVal updatedRows() As Global.System.Data.DataRow, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Global.System.Data.DataRow()
            If ((updatedRows Is Nothing)  _
                        OrElse (updatedRows.Length < 1)) Then
                Return updatedRows
            End If
            If ((allAddedRows Is Nothing)  _
                        OrElse (allAddedRows.Count < 1)) Then
                Return updatedRows
            End If
            Dim realUpdatedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim i As Integer = 0
            Do While (i < updatedRows.Length)
                Dim row As Global.System.Data.DataRow = updatedRows(i)
                If (allAddedRows.Contains(row) = false) Then
                    realUpdatedRows.Add(row)
                End If
                i = (i + 1)
            Loop
            Return realUpdatedRows.ToArray
        End Function
        
        '''<summary>
        '''Update all changes to the dataset.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overridable Function UpdateAll(ByVal dataSet As autoescola_dbDataSet) As Integer
            If (dataSet Is Nothing) Then
                Throw New Global.System.ArgumentNullException("dataSet")
            End If
            If (dataSet.HasChanges = false) Then
                Return 0
            End If
            If ((Not (Me._tb_agendaTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._tb_agendaTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("Todos os TableAdapters gerenciados por um TableAdapterManager devem usar a mesma "& _ 
                        "cadeia de conexão.")
            End If
            If ((Not (Me._tb_alunoTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._tb_alunoTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("Todos os TableAdapters gerenciados por um TableAdapterManager devem usar a mesma "& _ 
                        "cadeia de conexão.")
            End If
            If ((Not (Me._tb_aula_praticaTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._tb_aula_praticaTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("Todos os TableAdapters gerenciados por um TableAdapterManager devem usar a mesma "& _ 
                        "cadeia de conexão.")
            End If
            If ((Not (Me._tb_aula_teoricaTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._tb_aula_teoricaTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("Todos os TableAdapters gerenciados por um TableAdapterManager devem usar a mesma "& _ 
                        "cadeia de conexão.")
            End If
            If ((Not (Me._tb_carroTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._tb_carroTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("Todos os TableAdapters gerenciados por um TableAdapterManager devem usar a mesma "& _ 
                        "cadeia de conexão.")
            End If
            If ((Not (Me._tb_instrutorTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._tb_instrutorTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("Todos os TableAdapters gerenciados por um TableAdapterManager devem usar a mesma "& _ 
                        "cadeia de conexão.")
            End If
            If ((Not (Me._tb_pagamentoTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._tb_pagamentoTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("Todos os TableAdapters gerenciados por um TableAdapterManager devem usar a mesma "& _ 
                        "cadeia de conexão.")
            End If
            Dim workConnection As Global.System.Data.IDbConnection = Me.Connection
            If (workConnection Is Nothing) Then
                Throw New Global.System.ApplicationException("TableAdapterManager não contém informações de conexão. Defina cada propriedade Ta"& _ 
                        "bleAdapter de TableAdapterManager como uma instância válida de TableAdapter.")
            End If
            Dim workConnOpened As Boolean = false
            If ((workConnection.State And Global.System.Data.ConnectionState.Broken)  _
                        = Global.System.Data.ConnectionState.Broken) Then
                workConnection.Close
            End If
            If (workConnection.State = Global.System.Data.ConnectionState.Closed) Then
                workConnection.Open
                workConnOpened = true
            End If
            Dim workTransaction As Global.System.Data.IDbTransaction = workConnection.BeginTransaction
            If (workTransaction Is Nothing) Then
                Throw New Global.System.ApplicationException("Não é possível iniciar a transação. Os dados de conexão atuais não oferecem supor"& _ 
                        "te às transações ou o estado atual não permite que a transação inicie.")
            End If
            Dim allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim adaptersWithAcceptChangesDuringUpdate As Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter) = New Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter)()
            Dim revertConnections As Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection) = New Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection)()
            Dim result As Integer = 0
            Dim backupDataSet As Global.System.Data.DataSet = Nothing
            If Me.BackupDataSetBeforeUpdate Then
                backupDataSet = New Global.System.Data.DataSet()
                backupDataSet.Merge(dataSet)
            End If
            Try 
                '---- Prepare for update -----------
                '
                If (Not (Me._tb_agendaTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._tb_agendaTableAdapter, Me._tb_agendaTableAdapter.Connection)
                    Me._tb_agendaTableAdapter.Connection = CType(workConnection,Global.System.Data.OleDb.OleDbConnection)
                    Me._tb_agendaTableAdapter.Transaction = CType(workTransaction,Global.System.Data.OleDb.OleDbTransaction)
                    If Me._tb_agendaTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._tb_agendaTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._tb_agendaTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._tb_alunoTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._tb_alunoTableAdapter, Me._tb_alunoTableAdapter.Connection)
                    Me._tb_alunoTableAdapter.Connection = CType(workConnection,Global.System.Data.OleDb.OleDbConnection)
                    Me._tb_alunoTableAdapter.Transaction = CType(workTransaction,Global.System.Data.OleDb.OleDbTransaction)
                    If Me._tb_alunoTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._tb_alunoTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._tb_alunoTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._tb_aula_praticaTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._tb_aula_praticaTableAdapter, Me._tb_aula_praticaTableAdapter.Connection)
                    Me._tb_aula_praticaTableAdapter.Connection = CType(workConnection,Global.System.Data.OleDb.OleDbConnection)
                    Me._tb_aula_praticaTableAdapter.Transaction = CType(workTransaction,Global.System.Data.OleDb.OleDbTransaction)
                    If Me._tb_aula_praticaTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._tb_aula_praticaTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._tb_aula_praticaTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._tb_aula_teoricaTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._tb_aula_teoricaTableAdapter, Me._tb_aula_teoricaTableAdapter.Connection)
                    Me._tb_aula_teoricaTableAdapter.Connection = CType(workConnection,Global.System.Data.OleDb.OleDbConnection)
                    Me._tb_aula_teoricaTableAdapter.Transaction = CType(workTransaction,Global.System.Data.OleDb.OleDbTransaction)
                    If Me._tb_aula_teoricaTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._tb_aula_teoricaTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._tb_aula_teoricaTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._tb_carroTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._tb_carroTableAdapter, Me._tb_carroTableAdapter.Connection)
                    Me._tb_carroTableAdapter.Connection = CType(workConnection,Global.System.Data.OleDb.OleDbConnection)
                    Me._tb_carroTableAdapter.Transaction = CType(workTransaction,Global.System.Data.OleDb.OleDbTransaction)
                    If Me._tb_carroTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._tb_carroTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._tb_carroTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._tb_instrutorTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._tb_instrutorTableAdapter, Me._tb_instrutorTableAdapter.Connection)
                    Me._tb_instrutorTableAdapter.Connection = CType(workConnection,Global.System.Data.OleDb.OleDbConnection)
                    Me._tb_instrutorTableAdapter.Transaction = CType(workTransaction,Global.System.Data.OleDb.OleDbTransaction)
                    If Me._tb_instrutorTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._tb_instrutorTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._tb_instrutorTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._tb_pagamentoTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._tb_pagamentoTableAdapter, Me._tb_pagamentoTableAdapter.Connection)
                    Me._tb_pagamentoTableAdapter.Connection = CType(workConnection,Global.System.Data.OleDb.OleDbConnection)
                    Me._tb_pagamentoTableAdapter.Transaction = CType(workTransaction,Global.System.Data.OleDb.OleDbTransaction)
                    If Me._tb_pagamentoTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._tb_pagamentoTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._tb_pagamentoTableAdapter.Adapter)
                    End If
                End If
                '
                '---- Perform updates -----------
                '
                If (Me.UpdateOrder = UpdateOrderOption.UpdateInsertDelete) Then
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                Else
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                End If
                result = (result + Me.UpdateDeletedRows(dataSet, allChangedRows))
                '
                '---- Commit updates -----------
                '
                workTransaction.Commit
                If (0 < allAddedRows.Count) Then
                    Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                    allAddedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
                If (0 < allChangedRows.Count) Then
                    Dim rows((allChangedRows.Count) - 1) As Global.System.Data.DataRow
                    allChangedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
            Catch ex As Global.System.Exception
                workTransaction.Rollback
                '---- Restore the dataset -----------
                If Me.BackupDataSetBeforeUpdate Then
                    Global.System.Diagnostics.Debug.Assert((Not (backupDataSet) Is Nothing))
                    dataSet.Clear
                    dataSet.Merge(backupDataSet)
                Else
                    If (0 < allAddedRows.Count) Then
                        Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                        allAddedRows.CopyTo(rows)
                        Dim i As Integer = 0
                        Do While (i < rows.Length)
                            Dim row As Global.System.Data.DataRow = rows(i)
                            row.AcceptChanges
                            row.SetAdded
                            i = (i + 1)
                        Loop
                    End If
                End If
                Throw ex
            Finally
                If workConnOpened Then
                    workConnection.Close
                End If
                If (Not (Me._tb_agendaTableAdapter) Is Nothing) Then
                    Me._tb_agendaTableAdapter.Connection = CType(revertConnections(Me._tb_agendaTableAdapter),Global.System.Data.OleDb.OleDbConnection)
                    Me._tb_agendaTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._tb_alunoTableAdapter) Is Nothing) Then
                    Me._tb_alunoTableAdapter.Connection = CType(revertConnections(Me._tb_alunoTableAdapter),Global.System.Data.OleDb.OleDbConnection)
                    Me._tb_alunoTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._tb_aula_praticaTableAdapter) Is Nothing) Then
                    Me._tb_aula_praticaTableAdapter.Connection = CType(revertConnections(Me._tb_aula_praticaTableAdapter),Global.System.Data.OleDb.OleDbConnection)
                    Me._tb_aula_praticaTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._tb_aula_teoricaTableAdapter) Is Nothing) Then
                    Me._tb_aula_teoricaTableAdapter.Connection = CType(revertConnections(Me._tb_aula_teoricaTableAdapter),Global.System.Data.OleDb.OleDbConnection)
                    Me._tb_aula_teoricaTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._tb_carroTableAdapter) Is Nothing) Then
                    Me._tb_carroTableAdapter.Connection = CType(revertConnections(Me._tb_carroTableAdapter),Global.System.Data.OleDb.OleDbConnection)
                    Me._tb_carroTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._tb_instrutorTableAdapter) Is Nothing) Then
                    Me._tb_instrutorTableAdapter.Connection = CType(revertConnections(Me._tb_instrutorTableAdapter),Global.System.Data.OleDb.OleDbConnection)
                    Me._tb_instrutorTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._tb_pagamentoTableAdapter) Is Nothing) Then
                    Me._tb_pagamentoTableAdapter.Connection = CType(revertConnections(Me._tb_pagamentoTableAdapter),Global.System.Data.OleDb.OleDbConnection)
                    Me._tb_pagamentoTableAdapter.Transaction = Nothing
                End If
                If (0 < adaptersWithAcceptChangesDuringUpdate.Count) Then
                    Dim adapters((adaptersWithAcceptChangesDuringUpdate.Count) - 1) As Global.System.Data.Common.DataAdapter
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters)
                    Dim i As Integer = 0
                    Do While (i < adapters.Length)
                        Dim adapter As Global.System.Data.Common.DataAdapter = adapters(i)
                        adapter.AcceptChangesDuringUpdate = true
                        i = (i + 1)
                    Loop
                End If
            End Try
            Return result
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overridable Sub SortSelfReferenceRows(ByVal rows() As Global.System.Data.DataRow, ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
            Global.System.Array.Sort(Of Global.System.Data.DataRow)(rows, New SelfReferenceComparer(relation, childFirst))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overridable Function MatchTableAdapterConnection(ByVal inputConnection As Global.System.Data.IDbConnection) As Boolean
            If (Not (Me._connection) Is Nothing) Then
                Return true
            End If
            If ((Me.Connection Is Nothing)  _
                        OrElse (inputConnection Is Nothing)) Then
                Return true
            End If
            If String.Equals(Me.Connection.ConnectionString, inputConnection.ConnectionString, Global.System.StringComparison.Ordinal) Then
                Return true
            End If
            Return false
        End Function
        
        '''<summary>
        '''Update Order Option
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Enum UpdateOrderOption
            
            InsertUpdateDelete = 0
            
            UpdateInsertDelete = 1
        End Enum
        
        '''<summary>
        '''Used to sort self-referenced table's rows
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Class SelfReferenceComparer
            Inherits Object
            Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow)
            
            Private _relation As Global.System.Data.DataRelation
            
            Private _childFirst As Integer
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
            Friend Sub New(ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
                MyBase.New
                Me._relation = relation
                If childFirst Then
                    Me._childFirst = -1
                Else
                    Me._childFirst = 1
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
            Private Function GetRoot(ByVal row As Global.System.Data.DataRow, ByRef distance As Integer) As Global.System.Data.DataRow
                Global.System.Diagnostics.Debug.Assert((Not (row) Is Nothing))
                Dim root As Global.System.Data.DataRow = row
                distance = 0

                Dim traversedRows As Global.System.Collections.Generic.IDictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow) = New Global.System.Collections.Generic.Dictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow)()
                traversedRows(row) = row

                Dim parent As Global.System.Data.DataRow = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Do While ((Not (parent) Is Nothing)  _
                            AndAlso (traversedRows.ContainsKey(parent) = false))
                    distance = (distance + 1)
                    root = parent
                    traversedRows(parent) = parent
                    parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Loop

                If (distance = 0) Then
                    traversedRows.Clear
                    traversedRows(row) = row
                    parent = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Do While ((Not (parent) Is Nothing)  _
                                AndAlso (traversedRows.ContainsKey(parent) = false))
                        distance = (distance + 1)
                        root = parent
                        traversedRows(parent) = parent
                        parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Loop
                End If

                Return root
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
            Public Function Compare(ByVal row1 As Global.System.Data.DataRow, ByVal row2 As Global.System.Data.DataRow) As Integer Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow).Compare
                If Object.ReferenceEquals(row1, row2) Then
                    Return 0
                End If
                If (row1 Is Nothing) Then
                    Return -1
                End If
                If (row2 Is Nothing) Then
                    Return 1
                End If

                Dim distance1 As Integer = 0
                Dim root1 As Global.System.Data.DataRow = Me.GetRoot(row1, distance1)

                Dim distance2 As Integer = 0
                Dim root2 As Global.System.Data.DataRow = Me.GetRoot(row2, distance2)

                If Object.ReferenceEquals(root1, root2) Then
                    Return (Me._childFirst * distance1.CompareTo(distance2))
                Else
                    Global.System.Diagnostics.Debug.Assert(((Not (root1.Table) Is Nothing)  _
                                    AndAlso (Not (root2.Table) Is Nothing)))
                    If (root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2)) Then
                        Return -1
                    Else
                        Return 1
                    End If
                End If
            End Function
        End Class
    End Class
End Namespace
